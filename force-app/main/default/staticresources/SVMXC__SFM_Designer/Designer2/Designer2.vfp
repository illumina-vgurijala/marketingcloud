<apex:page controller="SFM_Designer" standardStylesheets="false" sidebar="true" showHeader="true">
<apex:outputText rendered="{!isUsageTrackingAllowed}">
<apex:includeScript value="{!URLFOR($Resource.ServiceMax_usage_lib , 'ServiceMax_usage_lib/ServiceMax_usage_lib.js')}"/>
</apex:outputText>
  <script>

   window.SVMXDesignerJSR = {
       jsrActionMapping:{
          JSRGetWhereUsedInfo:'{!$RemoteAction.SFM_Designer.JSRGetWhereUsedInfo}',
            JSRCloneRule: '{!$RemoteAction.SFM_Designer.JSRCloneRule}',
            JSRGetDisplayTags:'{!$RemoteAction.SFM_Designer.JSRGetDisplayTags}',
            JSRGetUserInfo:'{!$RemoteAction.SFM_Designer.JSRGetUserInfo}',
            JSRGetListOfProcesses:'{!$RemoteAction.SFM_Designer.JSRGetListOfProcesses}',
            JSRGetsObjects: '{!$RemoteAction.SFM_Designer.JSRGetsObjects}',
            JSRGetsObjectFields: '{!$RemoteAction.SFM_Designer.JSRGetsObjectFields}',
            JSRGetPropertyElements: '{!$RemoteAction.SFM_Designer.JSRGetPropertyElements}',
            JSRGetListOfRules: '{!$RemoteAction.SFM_Designer.JSRGetListOfRules}',
            JSRRemoveEntities: '{!$RemoteAction.SFM_Designer.JSRRemoveEntities}',
            JSRGetOperators: '{!$RemoteAction.SFM_Designer.JSRGetOperators}',
            JSRGetLookupRecords: '{!$RemoteAction.SFM_Designer.JSRGetLookupRecords}',
            JSRSaveRule: '{!$RemoteAction.SFM_Designer.JSRSaveRule}',
            JSRCheckDuplicateName: '{!$RemoteAction.SFM_Designer.JSRCheckDuplicateName}',
            JSRCloneProcess: '{!$RemoteAction.SFM_Designer.JSRCloneProcess}',
            JSRSaveProcess: '{!$RemoteAction.SFM_Designer.JSRSaveProcess}',
            JSRGetSFMTagsList: '{!$RemoteAction.SFM_Designer.JSRGetSFMTagsList}',
            JSRGetRelatedObjects: '{!$RemoteAction.SFM_Designer.JSRGetRelatedObjects}',
            JSRGetFieldSets:'{!$RemoteAction.SFM_Designer.JSRGetFieldSets}',
            JSRGetLayouts:'{!$RemoteAction.SFM_Designer.JSRGetLayouts}',
            JSRCloneLayout:'{!$RemoteAction.SFM_Designer.JSRCloneLayout}',
            JSRCloneLookupConfig:'{!$RemoteAction.SFM_Designer.JSRCloneLookupConfig}',
            JSRSaveLookupConfig:'{!$RemoteAction.SFM_Designer.JSRSaveLookupConfig}',
            JSRGetCodeSnippets:'{!$RemoteAction.SFM_Designer.JSRGetCodeSnippets}',
            JSRGetMultiSourceProcess:'{!$RemoteAction.SFM_Designer.JSRGetMultiSourceProcess}',
            JSRSaveLayout:'{!$RemoteAction.SFM_Designer.JSRSaveLayout}',
            JSRGetLinkedProcess:'{!$RemoteAction.SFM_Designer.JSRGetLinkedProcess}',
            JSRGetSFMFunctions: '{!$RemoteAction.SFM_Designer.JSRGetSFMFunctions}',
            JSRGetCustomActions: '{!$RemoteAction.SFM_Designer.JSRGetCustomActions}',
            JSRCloneTemplate:'{!$RemoteAction.SFM_Designer.JSRCloneTemplate}',
            JSRSaveTemplate:'{!$RemoteAction.SFM_Designer.JSRSaveTemplate}',
            JSRGetListOfTemplates:'{!$RemoteAction.SFM_Designer.JSRGetListOfTemplates}',
            JSRGetSettingInfo:'{!$RemoteAction.SFM_Designer.JSRGetSettingInfo}',
            JSRGetChecklistProcess:'{!$RemoteAction.SFM_Designer.JSRGetChecklistProcess}',
            JSRGetChecklistQuestions:'{!$RemoteAction.SFM_Designer.JSRGetChecklistQuestions}',
            JSRGetApiConfiguration:'{!$RemoteAction.SFM_Designer.JSRGetApiConfiguration}',
            JSRGetListOfQuestions:'{!$RemoteAction.SFM_Designer.JSRGetListOfQuestions}',
            JSRGetListOfResponseSet:'{!$RemoteAction.SFM_Designer.JSRGetListOfResponseSet}',
       },
      makeJsrRequest :function(jsrMappingKey, request, callback, context,jsrActionParams){

        var requestStr = JSON.stringify(request);
        Visualforce.remoting.Manager.invokeAction(SVMXDesignerJSR.jsrActionMapping[jsrMappingKey], requestStr,
          function(result, event){
            SVMXDesignerJSR.processResult(result, event, callback, context);
          },
          jsrActionParams
        );

    },
      processResult : function(result, event, callback, context){
        var ret = {success : false};
        if(event.status == true){
          ret = JSON.parse(result);
        }
        callback.call(context, ret, event);
      }
    }
  </script>
<html lang="en" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<head>
  <meta charset="utf-8"/>
  <meta name="viewport" content="width=device-width,initial-scale=1,shrink-to-fit=no"/>
  <meta name="theme-color" content="#000000"/>
  <link rel="manifest" href="{!URLFOR($Resource.designer2, 'Designer2')}/manifest.json"/>
  <link rel="shortcut icon" href="{!URLFOR($Resource.designer2, 'Designer2')}/favicon.ico"/>
  <link href="{!URLFOR($Resource.designer2, 'Designer2')}/static/css/main.css" rel="stylesheet"/>
  <title>ServiceMax Designer</title>
  <apex:slds />
</head>
<body>
<div class="slds-scope">
  <noscript>You need to enable JavaScript to run this app.</noscript>
  <div id="root"></div>
  <div id="portal-root"></div>
</div>
<script>
var isRemote = !0;
var ASSET_ROOT = "{!URLFOR($Asset.SLDS, '/')}";
var PUBLIC_URL = "{!URLFOR($Resource.designer2, 'Designer2')}";
var CKEDITOR_URL = "{!URLFOR($Resource.svmx_ckeditor4, 'ckeditor/ckeditor.js')}";
var userTimeFormat = window.UserContext.timeFormat;
</script>
<script type="text/javascript" src="{!URLFOR($Resource.designer2, 'Designer2')}/static/js/main.js"></script>
</body>
</html>
</apex:page>
