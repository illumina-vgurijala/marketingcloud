(function(){var a=SVMX.Package("com.servicemax.client.iot.admin.compositekey");a.init=function(){Ext.define("com.servicemax.client.iot.admin.compositeKeyGrid",{extend:"com.servicemax.client.installigence.ui.components.SVMXGrid",__config:null,constructor:function(b){this.__config=b;b.columns=[new Ext.grid.RowNumberer()];if(b.forExternal){b.columns.push(this.createTextBoxColumn({text:$TR.EXTERNAL_FLD_NAME,dataIndex:"name",width:400,flex:1}));}else{b.columns.push(this.createComboBoxColumn({text:$TR.IB_FLD_NAME,dataIndex:"name",width:400,flex:1,renderer:function(c){return Ext.String.htmlEncode(c);},}));}b.columns.push({menuDisabled:true,sortable:false,xtype:"actioncolumn",width:50,items:[{iconCls:"delet-icon",tooltip:$TR.DELETE}],handler:function(d,g,c){var e=d.getStore();var f=e.getAt(g);e.remove(f);d.refresh();},renderer:function(e,d,c){b.columns[b.columns.length-1].items[0].iconCls="delet-icon";}});this.callParent([b]);},createTextBoxColumn:function(b){var d=this;var c=SVMX.create("com.servicemax.client.installigence.ui.components.SVMXTextField",{allowBlank:true,editable:true});var b=b||{};b.sortable=false;b.editable=true;b.getEditor=function(e){return c;};return b;},createComboBoxColumn:function(c){var e=this;var b=SVMX.create("com.servicemax.client.ui.components.composites.impl.SVMXStore",{fields:["fieldAPIName","fieldLabel"],sorters:[{property:"fieldLabel",direction:"ASC"}],data:this.__config.metadata[SVMX.OrgNamespace+"__Installed_Product__c"].fields});var d=SVMX.create("com.servicemax.client.iot.admin.celleditors.SVMXComboBoxCellEditor",{displayField:"fieldLabel",queryMode:"local",editable:false,valueField:"fieldAPIName",fieldName:"name",store:b});var c=c||{};c.menuDisabled=true;c.sortable=false;c.getEditor=function(f){d.setRecord(f);return d;};return c;}});Ext.define("com.servicemax.client.iot.admin.CompositeKey",{extend:"com.servicemax.client.installigence.ui.components.SVMXPanel",sfKeyGrid:null,exKeyGrid:null,sfKey:null,exKey:null,metadata:null,addRecButton:null,constructor:function(c){var d=this;this.metadata=c.metadata;this.refresh();var f=SVMX.create("com.servicemax.client.installigence.ui.components.SVMXToolbar",{style:"border-width: 0"});this.addRecButton=SVMX.create("com.servicemax.client.installigence.ui.components.SVMXButton",{text:$TR.ADD,cls:"iot-setup-add-button",handler:function(){d.onAddRecords(d.sfKeyGrid);this.setDisabled(true);}});this.sfKey=SVMX.create("com.servicemax.client.installigence.ui.components.SVMXTextField",{allowBlank:true,editable:false});f.add(this.sfKey);f.add("->");f.add(this.addRecButton);var h=SVMX.create("com.servicemax.client.installigence.ui.components.SVMXToolbar",{style:"border-width: 0"});var b=SVMX.create("com.servicemax.client.installigence.ui.components.SVMXButton",{text:$TR.ADD,cls:"iot-setup-add-button",handler:function(){d.onAddRecords(d.exKeyGrid);}});this.exKey=SVMX.create("com.servicemax.client.installigence.ui.components.SVMXTextField",{allowBlank:true,editable:false});h.add(this.exKey);h.add("->");h.add(b);var e=this.resolveIBFields(c.metadata.compositeKey&&c.metadata.compositeKey.ibFields&&c.metadata.compositeKey.ibFields!==null?c.metadata.compositeKey.ibFields:[]);var g=c.metadata.compositeKey&&c.metadata.compositeKey.externalFields&&c.metadata.compositeKey.externalFields!==null?c.metadata.compositeKey.externalFields:[];c=c||{};c.items=[];c.items.push(f);this.sfKeyGrid=this.addGrid(c,false,e);if(e.length>0){this.addRecButton.setDisabled(true);}c.items.push(h);this.exKeyGrid=this.addGrid(c,true,g);c.title=$TR.COMP_INFO;c.id="CI";this.sfKeyGrid.getView().on("refresh",this.updateSFKey,this);this.exKeyGrid.getView().on("refresh",this.updateEXKey,this);this.callParent([c]);},addGrid:function(c,g,e){var d=SVMX.create("com.servicemax.client.ui.components.composites.impl.SVMXStore",{fields:["name"],data:e});var f=SVMX.create("com.servicemax.client.iot.admin.compositeKeyGrid",{cls:"grid-panel-borderless panel-radiusless iot-setup-ta-grid",selType:"cellmodel",height:200,plugins:[SVMX.create("com.servicemax.client.installigence.ui.components.SVMXCellEditorPlugin",{clicksToEdit:2})],viewConfig:{markDirty:false},store:d,metadata:c.metadata,forExternal:g,});var b=SVMX.create("com.servicemax.client.installigence.ui.components.SVMXFormPanel",{style:"margin: 1px 0",layout:"fit",title:g?$TR.COMP_KEY:$TR.EXT_KEY,cls:"grid-panel-borderless",height:200,defaults:{anchor:"40%"}});b.add(f);c.items.push(b);return f;},onAddRecords:function(c){c.addItems({});c.getView().refresh();var d=c.store.data.items.length-1;var b=c.getView();Ext.get(b.getRow(d)).scrollIntoView(b.getEl(),null,true);b.select(d);},updateSFKey:function(){this.updateKey(this.sfKeyGrid,this.sfKey);if(this.sfKeyGrid.getStore()&&this.sfKeyGrid.getStore()&&this.sfKeyGrid.getStore().getData()){var b=this.sfKeyGrid.getStore().getData().length;if(b==0){this.addRecButton.setDisabled(false);}}},updateEXKey:function(){this.updateKey(this.exKeyGrid,this.exKey);},resolveIBFields:function(d){var f=0,c=[],e=0;var b=this.metadata[SVMX.OrgNamespace+"__Installed_Product__c"].fields;
for(f=0;f<d.length;f++){for(e=0;e<b.length;e++){if(b[e].fieldAPIName==d[f].name){c.push({name_key:b[e].fieldAPIName,name:b[e].fieldLabel});}}}return c;},loadData:function(d){this.metadata=d;var b=this.metadata.sforceObjectDescribes;for(var c=0;c<b.length;c++){this.metadata[b[c].objectAPIName]=b[c];}var e=this.resolveIBFields(this.metadata.compositeKey?this.metadata.compositeKey.ibFields:[]);var f=this.metadata.compositeKey?this.metadata.compositeKey.externalFields:[];this.sfKeyGrid.getStore().loadData(e);this.sfKeyGrid.getStore().commitChanges();this.exKeyGrid.getStore().loadData(f);this.exKeyGrid.getStore().commitChanges();},updateKey:function(e,d){var c=0,f=e.store.data.length;var b="";for(c=1;c<=f;c++){b=b.length>0?b+"+":b;b=b+c;}d.setValue(b);},getData:function(){var b=this.getRecords(this.sfKeyGrid.getStore(),true);var c=this.getRecords(this.exKeyGrid.getStore());return{ibFields:b,externalFields:c};},refresh:function(){var b=this;SVMX.getClient().bind("SAVE_SUCCESS",function(c){b.loadData(c.data);},this);},getRecords:function(c,d){var b=[];var e=d?"name_key":"name";c.each(function(f){delete f.data.id;b.push({name:f.data[e],sequence:b.length+1});});return b;}});};})();