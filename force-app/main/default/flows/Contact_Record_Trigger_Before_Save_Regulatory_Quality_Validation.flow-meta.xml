<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>54.0</apiVersion>
    <assignments>
        <description>If Role Exist then assign ACR Role value equals to True</description>
        <name>Set_ACR_Role</name>
        <label>Set ACR Role</label>
        <locationX>1040</locationX>
        <locationY>791</locationY>
        <assignmentItems>
            <assignToReference>VarB_CheckIfACRRoleExist</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IsRecordType</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>This will trigger when Email is updated  and user tries to click on save</description>
        <name>Set_Contact_Validation_with_Illumina_Email</name>
        <label>Set Contact Validation with Illumina Email</label>
        <locationX>50</locationX>
        <locationY>1679</locationY>
        <assignmentItems>
            <assignToReference>$Record.Flow_Validation_Rule__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>RQ Illumina Email Validation</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <description>If Record Type Exist then assign ACR Record Type value equals to True</description>
        <name>Set_Record_Type_as_llumina_Internal</name>
        <label>Set Record Type as llumina Internal</label>
        <locationX>908</locationX>
        <locationY>1031</locationY>
        <assignmentItems>
            <assignToReference>IsIlluminaInternal</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_through_all_ACR_records</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Set the picklist values a Null as per outcome</description>
        <name>Set_the_Picklist_value_as_Null</name>
        <label>Set the Picklist value as Null</label>
        <locationX>820</locationX>
        <locationY>2447</locationY>
        <assignmentItems>
            <assignToReference>$Record.Flow_Validation_Rule__c</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
    </assignments>
    <assignments>
        <description>This will trigger when Email is removed and user tries to click on save</description>
        <name>SetContactFlowValidation</name>
        <label>SetContactFlowValidation</label>
        <locationX>490</locationX>
        <locationY>1559</locationY>
        <assignmentItems>
            <assignToReference>$Record.Flow_Validation_Rule__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>RQ Missing Email Validation</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <description>This will trigger when Email is updated with illumina address and user tries to click on save</description>
        <name>SetContactFlowValidation_with_Public_Domain</name>
        <label>SetContactFlowValidation with Public Domain</label>
        <locationX>754</locationX>
        <locationY>1919</locationY>
        <assignmentItems>
            <assignToReference>$Record.Flow_Validation_Rule__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>RQ Public Domain Email Validation</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <decisions>
        <description>System Admin and Data steward profiles can able to update public domain email address</description>
        <name>Bypass_Profiles</name>
        <label>Bypass Profiles</label>
        <locationX>886</locationX>
        <locationY>1799</locationY>
        <defaultConnector>
            <targetReference>Set_the_Picklist_value_as_Null</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Yes</defaultConnectorLabel>
        <rules>
            <name>Is_Profile_Admin_and_Data_Steward</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Profile.Name</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Data Steward</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Profile.Name</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>System Administrator</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetContactFlowValidation_with_Public_Domain</targetReference>
            </connector>
            <label>Is Profile Admin and Data Steward</label>
        </rules>
    </decisions>
    <decisions>
        <description>Adding flag to bypass Flows.</description>
        <name>BypassFlow</name>
        <label>BypassFlow</label>
        <locationX>1227</locationX>
        <locationY>311</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>FlowBypass</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Setup.cs_Apex_Settings__c.Bypass_All_Flows__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Account_Contact_Relationship_Records</targetReference>
            </connector>
            <label>FlowBypass</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check Email Id equal to Illumina id and Record Type not equal to Illumina Internal</description>
        <name>Check_Illumina_Domain</name>
        <label>Check Illumina Domain</label>
        <locationX>182</locationX>
        <locationY>1559</locationY>
        <defaultConnector>
            <targetReference>Set_the_Picklist_value_as_Null</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Illumina_Domain_Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Email</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Contact_Validation_with_Illumina_Email</targetReference>
            </connector>
            <label>Illumina Domain Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Domain_Check_0_0</name>
        <label>Domain Check</label>
        <locationX>1040</locationX>
        <locationY>1679</locationY>
        <defaultConnectorLabel>Yes</defaultConnectorLabel>
        <rules>
            <name>Domain_Match_0_0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Domain_Records_From_Custom_Meta_Data.Value__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>ParseDomain</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Bypass_Profiles</targetReference>
            </connector>
            <label>Domain Match</label>
        </rules>
    </decisions>
    <decisions>
        <description>If Role contains some values(Regulatory/Quality/Professor...) then assign it.</description>
        <name>Is_ACR_Role_is_True</name>
        <label>Is ACR Role is True?</label>
        <locationX>820</locationX>
        <locationY>1439</locationY>
        <defaultConnector>
            <targetReference>Set_the_Picklist_value_as_Null</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Reg_qual_found_and_Email_is_equal_to_Illumina_and_Record_type_not_equal_to_Illum</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarB_CheckIfACRRoleExist</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Email</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>@illumina.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IsIlluminaInternal</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Illumina_Domain</targetReference>
            </connector>
            <label>Reg qual found and Email is  equal to Illumina and Record type not equal to Illumina internal</label>
        </rules>
        <rules>
            <name>Regulatory_Quality_found_and_No_Email</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarB_CheckIfACRRoleExist</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Email</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetContactFlowValidation</targetReference>
            </connector>
            <label>Regulatory/Quality found and No Email</label>
        </rules>
        <rules>
            <name>Regulatory_Quality_Role_Is_found_and_Email_is_not_Blank</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarB_CheckIfACRRoleExist</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Email</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Domain_Records_From_Custom_Meta_Data</targetReference>
            </connector>
            <label>Regulatory/Quality Role Is found and Email is not Blank</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Role_Exist</name>
        <label>Is Role Exist?</label>
        <locationX>1194</locationX>
        <locationY>671</locationY>
        <defaultConnector>
            <targetReference>Loop_through_all_ACR_records</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Role_Exists</name>
            <conditionLogic>1 AND (2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>Loop_through_all_ACR_records.Roles</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Regulatory/Quality</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Loop_through_all_ACR_records.IsDirect</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Loop_through_all_ACR_records.IsDirect</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_ACR_Role</targetReference>
            </connector>
            <label>Role Exists</label>
        </rules>
    </decisions>
    <decisions>
        <description>Record Type contains Illumina Internal?</description>
        <name>IsRecordType</name>
        <label>IsRecordType?</label>
        <locationX>1040</locationX>
        <locationY>911</locationY>
        <defaultConnector>
            <targetReference>Loop_through_all_ACR_records</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>RecordTypeYes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_through_all_ACR_records.Account.RecordType.DeveloperName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Illumina_Internal</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Record_Type_as_llumina_Internal</targetReference>
            </connector>
            <label>RecordTypeYes</label>
        </rules>
    </decisions>
    <description>Flow will trigger for restrict the public domain and required email address</description>
    <formulas>
        <name>ParseDomain</name>
        <dataType>String</dataType>
        <expression>RIGHT({!$Record.Email}, LEN({!$Record.Email}) - FIND(&quot;@&quot;, {!$Record.Email}))</expression>
    </formulas>
    <interviewLabel>Contact : Record-Trigger : Before Save Regulatory/Quality Validation {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Contact : Record-Trigger : Before Save Regulatory/Quality Validation</label>
    <loops>
        <description>This will store all the ACR records  in the loop variable which we get through the getquery</description>
        <name>Loop_through_all_ACR_records</name>
        <label>Loop through all ACR records</label>
        <locationX>820</locationX>
        <locationY>551</locationY>
        <collectionReference>Get_Account_Contact_Relationship_Records</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Is_Role_Exist</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Is_ACR_Role_is_True</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Query all ACR records</description>
        <name>Get_Account_Contact_Relationship_Records</name>
        <label>Get  Account Contact Relationship Records</label>
        <locationX>820</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_through_all_ACR_records</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ContactId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>AccountContactRelation</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Query the public domain records from Custom Meta Data</description>
        <name>Get_Domain_Records_From_Custom_Meta_Data</name>
        <label>Get Domain Records From Custom Meta Data</label>
        <locationX>1040</locationX>
        <locationY>1559</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Domain_Check_0_0</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>Contains</operator>
            <value>
                <stringValue>Restricted_Email_Domains11</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Code_Parameter__mdt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>1101</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>BypassFlow</targetReference>
        </connector>
        <filterLogic>(1 OR 2) AND 3</filterLogic>
        <filters>
            <field>Email</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Email</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Is_Active__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Contact</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>CollectionOfACRValues</name>
        <dataType>Multipicklist</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>CollectionOfACRValuesText</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>IsIlluminaInternal</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>IsProfilecontainsAdminandDataSteward</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>true</stringValue>
        </value>
    </variables>
    <variables>
        <name>RoleVariable</name>
        <dataType>Multipicklist</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>RoleVariableText</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>qr-cn-May Release-PM-27:This variable will check whether the Role is Exist or not?</description>
        <name>VarB_CheckIfACRRoleExist</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
</Flow>
