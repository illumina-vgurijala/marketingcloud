<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Sends an email &quot;Quotation &lt;Quotation Name&gt; Large Cart Sync Completed&quot; and Feed &quot;Generate call has completed, Quote &lt;Quotation Name&gt; has successfully synced.&quot;</description>
        <name>PostToChatterGenerate</name>
        <label>PostToChatterGenerate</label>
        <locationX>50</locationX>
        <locationY>431</locationY>
        <actionName>PostToChatterAfterGenerate</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Is_Validate_Complete</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Fault_during_PostChatterGenerate</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>lstQuotationId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>PostToChatterAfterGenerate</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Sends email &quot;Quotation &lt;Quotation Name&gt; Large Cart Sync Completed&quot;
Sends feed &quot;Validate cart call has completed, Quote &lt;Quotation Name&gt; has successfully synced.&quot;</description>
        <name>PostValidationComplete</name>
        <label>PostValidationComplete</label>
        <locationX>50</locationX>
        <locationY>929</locationY>
        <actionName>PostToChatterAfterValidation</actionName>
        <actionType>apex</actionType>
        <faultConnector>
            <targetReference>Fault_during_PostValidationComplete</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>lstQuotationId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>PostToChatterAfterValidation</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>60.0</apiVersion>
    <assignments>
        <name>Fault_during_PostChatterGenerate</name>
        <label>Fault during PostChatterGenerate</label>
        <locationX>314</locationX>
        <locationY>539</locationY>
        <assignmentItems>
            <assignToReference>currentElement</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>PostToChatterGenerate</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>Create_Flow_Exception_Log</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Fault_during_PostValidationComplete</name>
        <label>Fault during PostValidationComplete</label>
        <locationX>314</locationX>
        <locationY>1037</locationY>
        <assignmentItems>
            <assignToReference>currentElement</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>PostValidationComplete</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Create_Flow_Exception_Log</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Is_Quotation_Sync_Complete</name>
        <label>Is Quotation Sync Complete</label>
        <locationX>314</locationX>
        <locationY>323</locationY>
        <defaultConnector>
            <targetReference>Is_Validate_Complete</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Sync_Complete</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Generate_In_Progress__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Async_Generation_Complete__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>HasQuotationGenerateFieldsChange</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>PostToChatterGenerate</targetReference>
            </connector>
            <label>Sync Complete</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Validate_Complete</name>
        <label>Is Validate Complete</label>
        <locationX>314</locationX>
        <locationY>821</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Validate_Complete</name>
            <conditionLogic>1 AND 2 AND 3</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Validation_In_Progress__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Async_Validation_Complete__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>HasQuotationValidationFieldsChange</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>PostValidationComplete</targetReference>
            </connector>
            <label>Validate Complete</label>
        </rules>
    </decisions>
    <description>Quotation After Update add validations</description>
    <environments>Default</environments>
    <formulas>
        <name>FlowandFailureElementName</name>
        <dataType>String</dataType>
        <expression>&apos;Quotation: After Update&apos; + {!currentElement}</expression>
    </formulas>
    <formulas>
        <description>RealTimePricingResponseReciever Snap Sales Integration mark as Generate_In_Progress__c as false and Async_Generation_Complete__c as true</description>
        <name>HasQuotationGenerateFieldsChange</name>
        <dataType>Boolean</dataType>
        <expression>AND(
ISCHANGED({!$Record.Generate_In_Progress__c}),
ISCHANGED({!$Record.Async_Generation_Complete__c})
)</expression>
    </formulas>
    <formulas>
        <description>True if Snap Sales Integration RealTimePricingResponseReciever has updated fields</description>
        <name>HasQuotationValidationFieldsChange</name>
        <dataType>Boolean</dataType>
        <expression>AND(
    ISCHANGED({!$Record.Validation_In_Progress__c}),
    ISCHANGED({!$Record.Async_Validation_Complete__c})
)</expression>
    </formulas>
    <interviewLabel>Quotation: After Update {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Quotation: After Update</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <start>
        <locationX>188</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Is_Quotation_Sync_Complete</targetReference>
        </connector>
        <object>Apttus_Proposal__Proposal__c</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <subflows>
        <name>Create_Flow_Exception_Log</name>
        <label>Create Flow Exception Log</label>
        <locationX>314</locationX>
        <locationY>1145</locationY>
        <flowName>Create_Flow_Exception_log</flowName>
        <inputAssignments>
            <name>CurrentRecord</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>CurrentUser</name>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>Message</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>Source</name>
            <value>
                <elementReference>FlowandFailureElementName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>Workstream</name>
            <value>
                <stringValue>Sales</stringValue>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <variables>
        <name>currentElement</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>