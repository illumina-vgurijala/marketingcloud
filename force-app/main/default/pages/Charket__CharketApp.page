<apex:page docType="html-5.0" showHeader="{!IsClassic}" sidebar="false" applyBodyTag="false" applyHtmlTag="{!IsClassic}"
    standardStylesheets="false" cache="true" controller="Charket.CharketAppController" tabStyle="Charket__tab" extensions="Charket.AgentRemoteActions,Charket.CampaignFlowRemoteActions,Charket.HomeRemoteActions,Charket.LiveChatRemoteActions,Charket.FollowerRemoteActions,Charket.TagRemoteActions,Charket.MessageRemoteActions,Charket.MassMessageRemoteActions,Charket.MenuRemoteActions,Charket.NotificationTemplateRemoteActions,Charket.ResponseRemoteActions,Charket.QRCodeRemoteActions,Charket.UserRemoteActions,Charket.DatabaseRemoteActions,Charket.PassRemoteActions,Charket.SkillRemoteActions,Charket.SObjectRemoteActions,Charket.LiveChatMonitorRemoteActions,Charket.NameBadgeTemplateRemoteActions,Charket.FormRemoteActions,Charket.UrlShortenerRemoteActions,Charket.CouponRemoteActions,Charket.SurveyRemoteActions,Charket.UIThemeUtilsIncludeController,Charket.AttachmentRemoteActions,Charket.WeChatAccountRemoteActions,Charket.CharketSettingsRemoteActions,Charket.ListViewRemoteActions,Charket.SystemInfoRemoteActions">
    <html>

    <head>
        <meta charset="utf-8"/>
        <title>Charket App | Charket</title>
        <apex:include pageName="Charket__UIThemeUtilsInclude"/>
        <apex:outputPanel rendered="{!IsClassic}" layout="none">
            <style>
                /* ===============
                Classic Styles
                ===============*/

                /* Override Salesforce standard styles */
                .noSidebarCell {
                    padding: 0px;
                }

                .outerNoSidebar {
                    padding-bottom: 0px !important;
                }

                .bPageFooter {
                    display: none;
                }

                .charket-app-page {
                    height: calc(100vh - 130px);
                }

                .right-page-section {
                    min-width: 1060px;
                    height: 100%;
                    overflow-y: auto;
                }

                #charket-loading-indictor {
                    position: absolute;
                    width: 100%;
                    height: calc(100vh - 130px);
                    min-width: 1190px;
                }
            </style>
            <script>
                // Change global style sheet when the page doesn't have a Salesforce standard header and isn't in an iframe.
                if (!document.querySelector('#AppBodyHeader') && self === top) {
                    const globalStyleList = `
                        .noSidebarCell {
                            padding: 0px;
                        }

                        .outerNoSidebar {
                            padding-bottom: 0px !important;
                        }

                        .bPageFooter {
                            display: none;
                        }

                        .charket-app-page {
                            height: 100vh;
                            overflow-y: hidden;
                        }

                        .right-page-section {
                            min-width: 1060px;
                            height: 100%;
                            overflow-y: auto;
                        }

                        #charket-loading-indictor {
                            position: absolute;
                            width: 100%;
                            height: 100vh;
                            min-width: 1190px;
                        }
                    `
                    document.getElementsByTagName('style')[0].innerHTML= globalStyleList
                }
            </script>
        </apex:outputPanel>
        <apex:outputPanel rendered="{!IsClassicConsole}" layout="none">
            <style>
                /* ===============
                Classic Console Styles
                ===============*/

                /* Override Salesforce standard styles */
                .noSidebarCell {
                    padding: 0px;
                }

                .outerNoSidebar {
                    padding-bottom: 0px !important;
                }

                .bPageFooter {
                    display: none;
                }

                .charket-app-page {
                    height: 100vh;
                }

                .right-page-section {
                    min-width: 1060px;
                    height: 100%;
                    overflow-y: auto;
                }

                #charket-loading-indictor {
                    position: absolute;
                    width: 100%;
                    height: 100vh;
                    min-width: 1190px;
                }
            </style>
        </apex:outputPanel>
        <apex:outputPanel rendered="{!IsLightning}" layout="none">
            <style>
                /* ===============
                 Lightning Styles
                ===============*/

                .charket-app-page {
                    height: 100%;
                }

                .right-page-section {
                    height: 100%;
                }

                .full-page {
                    border-radius: 4px;
                }

                .charket {
                    overflow-y: hidden;
                }

                .charket-lightning-bg {
                    position: relative;
                    height: 100%;
                    width: 100%;
                    padding-bottom: 0;
                    background-size: 100% 12.5rem;
                    background-repeat: no-repeat;
                }

                .charket-lightning {
                    border-top-left-radius: 4px;
                    border-top-right-radius: 4px;
                    border: 1px solid #dddbda;
                    height: calc(100vh - .75rem);
                    background: #fff !important;
                    z-index: 1;
                }

                .charket-lightning-btn-group {
                    bottom: 15px !important;
                }

                #charket-loading-indictor {
                    position: fixed;
                    height: 100vh;
                }
            </style>
        </apex:outputPanel>
        <apex:outputPanel rendered="{!AND(IsLightning, NOT(IsLightningConsole))}" layout="none">
            <style>
                .charket-lightning-bg {
                    padding: .75rem .75rem 0;
                }

                #charket-loading-indictor {
                    width: calc(100vw - 1.5rem);
                    margin: 0.75rem;
                    margin-bottom: 0px;
                    border-radius: 4px 4px 0px 0px;
                }
            </style>
        </apex:outputPanel>
        <apex:outputPanel rendered="{!IsLightningConsole}" layout="none">
            <style>
                .charket-lightning {
                    border-bottom-left-radius: 4px;
                    border-bottom-right-radius: 4px;
                }

                #charket-loading-indictor {
                    width: 100vw;
                    border-radius: 4px;
                }
            </style>
        </apex:outputPanel>
        <link href="{!URLFOR($Resource.CharketApp, 'static/css/vendor.css')}" rel="stylesheet"/>
        <link href="{!URLFOR($Resource.CharketApp, 'static/css/app.css')}" rel="stylesheet"/>
        <style>
            #charket-loading-indictor {
                z-index: 10000;
                background: white;
            }

            html, body, .charket-lightning-bg, .charket-lightning {
                height: 100%;
            }
        </style>
        <script type="text/javascript">
            if (!window._babelPolyfill && /MSIE|Trident|Edge/.test(navigator.userAgent)) {
                document.write('<script type="text/javascript" src="{!URLFOR($Resource.CharketConfig, 'polyfill.min.js')}"><\/script>');
            }

            window.addEventListener('app-rendered', () => {
                hideLodingIndictor()
            })

            function hideLodingIndictor() {
                var loadingEle = document.getElementById('charket-loading-indictor');
                loadingEle.style.display = 'none';
            }
        </script>
        <script type="text/javascript" defer="defer" src="{!URLFOR($Resource.CharketApp, 'static/js/streaming/cometd.js')}"></script>
        <script type="text/javascript" defer="defer" src="{!URLFOR($Resource.CharketApp, 'static/js/streaming/jquery.min.js')}"></script>
        <script type="text/javascript" defer="defer" src="{!URLFOR($Resource.CharketApp, 'static/js/streaming/jquery.cometd.js')}"></script>
        <script type="text/javascript" defer="defer" src="{!URLFOR($Resource.CharketApp, 'static/js/u-editor/ueditor.config.js')}"></script>
        <script type="text/javascript" defer="defer" src="{!URLFOR($Resource.CharketApp, 'static/js/u-editor/ueditor.all.min.js')}"></script>
        <script type="text/javascript" defer="defer" src="{!URLFOR($Resource.CharketApp, 'static/js/u-editor/lang/en/en.js')}"></script>
        <script type="text/javascript" defer="defer" src="{!URLFOR($Resource.CharketApp, 'static/js/manifest.js')}"></script>
        <script type="text/javascript" defer="defer" src="{!URLFOR($Resource.CharketApp, 'static/js/vendor.js')}"></script>
        <script type="text/javascript" defer="defer" src="{!URLFOR($Resource.CharketApp, 'static/js/app.js')}"></script>
    </head>

    <body class="charket">
        <div id="charket-loading-indictor">
            <img alt="loading" src="{!URLFOR($Resource.CharketApp, 'static/images/init_loading.gif')}" style="position: absolute; top: 40%; left: 50%; transform: translate(-50%, -50%);"/>
        </div>
        <script type="text/javascript">
            var _sfdcSessionId = '{!$Api.Session_ID}';
        </script>
        <apex:outputPanel rendered="{!!IsBrowserSupport}" layout="none">
            <c:BrowserUnsupported ></c:BrowserUnsupported>
            <script type="text/javascript">
                hideLodingIndictor();
            </script>
        </apex:outputPanel>
        <apex:outputPanel rendered="{!IsBrowserSupport}" layout="none">
            <div class="charket-lightning-bg">
                <div id="app">
                    <router-view></router-view>
                    <!-- built files will be auto injected -->
                </div>
            </div>

            <apex:outputPanel rendered="{!AND(IsLightning, NOT(IsLightningConsole))}" layout="none">
                <script>
                    const pageColorCookie = 'charket__page_color'
                    const defaultPageBannerCookie = 'charket__default_page_banner_full_size_url'

                    const pageColor = getCookie(pageColorCookie)
                    const defaultPageBanner = getCookie(defaultPageBannerCookie)

                    if (pageColor && defaultPageBanner) {
                        setLightningBackground(pageColor, defaultPageBanner)
                    } else {
                        fetch('/services/data/v45.0/ui-api/themes/active', {
                            method: 'GET',
                            headers: {
                                'Content-Type': 'application/json',
                                'Authorization': 'Bearer ' + _sfdcSessionId
                            }
                        }).then(res => res.json()).then(currentUITheme => {
                            setLightningBackground(currentUITheme.pageColor, currentUITheme.defaultPageBanner.fullSizeUrl)

                            setCookie(pageColorCookie, currentUITheme.pageColor, 24)
                            setCookie(defaultPageBannerCookie, currentUITheme.defaultPageBanner.fullSizeUrl, 24)
                        }).catch(err => { })
                    }

                    function getCookie(name) {
                        let nameEQ = `${name}=`
                        let ca = document.cookie.split(';')
                        for (let i = 0, len = ca.length; i < len; i++) {
                            let c = ca[i]
                            while (c.charAt(0) === ' ') {
                                c = c.substring(1, c.length)
                            }
                            if (c.indexOf(nameEQ) === 0) {
                                return c.substring(nameEQ.length, c.length)
                            }
                        }
                        return null
                    }

                    function loadStyleString(css) {
                        let style = document.createElement('style')
                        style.type = 'text/css'
                        try {
                            style.appendChild(document.createTextNode(css))
                        } catch (ex) {
                            style.styleSheet.cssText = css
                        }
                        let head = document.getElementsByTagName('head')[0]
                        head.appendChild(style)
                    }

                    function setLightningBackground(pageColor, imageUrl) {
                        document.querySelector('html').style.background = pageColor
                        loadStyleString(`.charket-lightning-bg:before {
                            content: '';
                            display: block;
                            position: absolute;
                            z-index: -1;
                            top: 0;
                            right: 0;
                            bottom: 0;
                            left: 0;
                            height: 12.5rem;
                            background-repeat: no-repeat;
                            background-size: cover;
                            background-image: url(${imageUrl}), linear-gradient(to top, rgba(2, 137, 225, 0.0) 0, ${pageColor});
                        }`)

                        loadStyleString(`.charket-lightning-bg:after {
                            content: '';
                            display: block;
                            position: absolute;
                            left: 0;
                            top: 9.375rem;
                            right: 0;
                            z-index:0;
                            width: 100%;
                            height: 3.125rem;
                            background-image: linear-gradient(to bottom, rgba(50, 152, 242, 0.0) 60%, ${pageColor});
                        }`)
                    }

                    function setCookie(name, value, hours) {
                        var expires = ''
                        if (hours) {
                            var date = new Date()
                            date.setTime(date.getTime() + (hours * 60 * 60 * 1000))
                            expires = `;expires=${date.toUTCString()}`
                        }
                        document.cookie = `${name}=${value}${expires}; path=/`
                    }
                </script>
            </apex:outputPanel>

        </apex:outputPanel>
    </body>

</html>
</apex:page>