<apex:page standardController="openq__Event__c" extensions="openq.Event_Detail_Controller" showHeader="true" sidebar="false" standardStylesheets="false">
    <apex:pageMessages id="pageMsgs"/>
    
    <apex:includescript value="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></apex:includescript>
    <apex:includescript value="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></apex:includescript>
    <apex:includescript value="{!URLFOR($Resource.openq__StylesScriptsImages,'scripts/jquery.tablesorter.min.js')}"> </apex:includescript>
  
    
    <apex:includeScript value="{!URLFOR($Resource.openq__StylesScriptsImages, 'scripts/f-combobox.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.openq__StylesScriptsImages, 'scripts/common-functions.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.openq__StylesScriptsImages, 'scripts/ui.combobox.r.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.openq__StylesScriptsImages, 'scripts/jquery.autoSuggest.1.6.2.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.openq__StylesScriptsImages, 'scripts/jquery.multiselect.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.openq__StylesScriptsImages, 'scripts/jquery.timepicker.js')}"/>      
          
    <script src="../../soap/ajax/26.0/connection.js" type="text/javascript"></script>
    <script src="../../soap/ajax/26.0/apex.js" type="text/javascript"></script>
     
    <apex:stylesheet value="{!URLFOR($Resource.openq__Styles_StandAlone, 'css/common.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.openq__Styles_StandAlone, 'css/style.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.openq__Styles_StandAlone, 'css/style2.css')}"/>    
    <apex:stylesheet value="{!URLFOR($Resource.openq__Styles_StandAlone, 'css/jquery-ui.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.openq__StylesScriptsImages, 'css/jquery.autoSuggest1.6.2.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.openq__StylesScriptsImages, 'css/jquery.multiselect.css')}"/>
    
    
    <!--[if lte IE 8]>
        
        <style>        
             
             #rightContainer table {
               table-layout: fixed;
             }
             
             #rightContainer td {
               overflow: auto;
             }
             
        </style>
        
        
                                                        
     <![endif]-->
     
    <script type="text/javascript">
                
        function uiCombobox_( selector, callback ) {
            if ( typeof selector == 'function' ) {
                callback = selector;
                selector = null;
            }
            
            selector = selector || '.ui-combobox';
            
            jQuery( selector )
                .combobox( { html: true, addClasses: 'ui-widget-combobox input-combobox' } )
                .siblings( '.ui-autocomplete-input' )
                .autocomplete( 'option', 'position', { my: "right top", at: "right bottom" } )
                .autocomplete( { minLength : 0 } )
                .autocomplete( 'widget' )       
                .addClass( 'ui-widget-combobox-list' )
                
            ;
            
            jQuery(selector).focus(function(){
                jQuery(selector).autocomplete("search","");
            });
        }   
    
        $.noConflict();
        // Code that uses other library's $ can follow here.
        
        function insertModalBkgs() {
            
            jQuery('#contentWrapper').prepend('<div id="popUpBkg2" class="popUpBkg" style="z-index: 1500px;"></div>');
            jQuery('#contentWrapper').prepend('<div id="popUpBkg" class="popUpBkg"></div>');
        }
      
        jQuery(document).ready(function() {
            
            refreshTabs(); 
            insertModalBkgs();
            loadDatePickers();
            loadTimePickers();
            if('{!JSENCODE(tabId)}' != ''){
                 selectTab('{!JSENCODE(tabId)}')
            }
                        
            if ('{!createNewEvent}' == 'true') {
                openNewEventPopup();             
            }
            
            if ('{!currentEvent.Id}' != '') {
                refreshColumnSorting();
            }
            
        });
        
        var madeChanges = false;
        var madeChangesForSubmitApproval = false;
        
        window.onbeforeunload = function() {
            if (madeChanges || madeChangesForSubmitApproval) {
                return 'Changes have not been saved.';
            }          
        }
        
        function refreshColumnSorting() {
            jQuery( '.tablesorter' ).tablesorter( { cssHeader : 'tableHeader', widgets: ['zebra']});
        }
        
        function refreshTabs() {
            jQuery( '#tabs' ).tabs({
                create: function( event, ui ) {
                    jQuery('#tabs').show();
                },
                activate: function( event, ui ) {
                    jQuery( '.tablesorter' ).trigger('sorton', [[]]);                   
                }
            });         
        }           
                    
        function onSelectPlan() {
            refreshTabs();
            refreshColumnSorting();
        }
        
        function closeOwnerPopup(){
            jQuery('#popUpBkg').css('display', 'none');
            jQuery('#popUpOwners').css('display', 'none'); 
            
            //alert('#1');
            
            jQuery('.eventOwnersSpan').each(function() {
                jQuery(this).html(getOwners());
            });
        }
        
        function cancelOwnerPopup(){
        
            jQuery('#popUpBkg').css('display', 'none');
            jQuery('#popUpOwners').css('display', 'none');
        }
        
        function getOwners() {
            
            //alert('#2');
            
            var ownerCSV = '';
            
            jQuery('#as-selections-owners .as-selection-item').each(function() {
            
                var text = jQuery(this).html();
                var indx = text.indexOf('</a>');
                
                if (indx > 0) {
                    var ownerName = text.substring(indx + 4);
                    ownerCSV += ownerName + ', ';
                }               
            });
            
            if (ownerCSV != '') {
                ownerCSV = ownerCSV.substring(0, ownerCSV.length - 2);
            }
            
            //alert(ownerCSV);
            
            return ownerCSV;
        }
        
        function submitForApproval() {
        
            submitForApprovalApex();
        }
        
        
        
        function editModeEnabled() {
            refreshTabs();
            
            jQuery('.detailsContainer').hide();
            
            jQuery('.multiSelectPicklistRow select').css('max-width', '140px');
            jQuery('dl').css('vertical-align', 'middle');
            jQuery('dd span').each(function(){
                if(jQuery(this).hasClass('lookupIcon')){
                    jQuery(this).parent().css('vertical-align', 'top');
                    jQuery(this).parent().css('padding-top', '5px');
                }
            });
            loadDatePickers();
            loadTimePickers();
            jQuery('#tabs-2 option[value=""]').remove();                        
            loadCombos();
            enableButton('#detailsSaveButton');         
            
            jQuery('.ui-tabs-panel input').click(function(){
                    
                 jQuery(this).select();
            });
            
            jQuery(".multiSelectPL_OP").hide();
            jQuery('.multiSelectPicklistTable').css('display','none');
            jQuery('.input-combobox').bind('keydown',loadDependencies)
            jQuery('.input-combobox').bind('focus',loadDependencies)
            jQuery('.input-combobox').bind('blur',loadDependencies)
            jQuery('.input-combobox').on('autocompleteselect',loadDependencies);
        //  setTimeout('loadFirstVals()',500);
            jQuery(".multiSelectPL_OP select").multiselect({
                height: "auto", width: "100%",
                noneSelectedText : "None selected",
                selectedText : function(numCheck, totalNum, arrCheck) {
                
                    var text = '';
                    for (var i=0; i < arrCheck.length; i++) {
                        text += arrCheck[i].value + ', ';
                    }                 
                    if (text.indexOf(', ') >= 0) {
                        text = text.substring(0, text.length - 2);            
                    }           
                    
                    if (text.length > 40) {
                        text = text.substring(0, 40) + '...';                    
                    }
                    
                    return text;            
                },                
                create: function() { jQuery(".multiSelectPL_OP").show() }
            }); 
            jQuery(".multiSelectPL_OP").each(function(){
             var values = jQuery('.defautlValues',this).val().split(';')
                jQuery('select',this).multiselect('widget').find(":checkbox").each(function(){
                   if(jQuery.inArray(this.value,values)!=-1 && !this.checked){
                        this.click();
                    }
                 })   
            })
 
            
            
            
            setTimeout(function() {
                jQuery('button.ui-multiselect').css('width', '100%');
                jQuery('div.ui-multiselect-menu').css('width', 'inherit !important');
            },15);
            
            madeChanges = true;
            
            setTimeout(function() {
            
                jQuery('.detailsContainer').show();
            }, 50);
            
        }
        
        function populateDefaultEndDate(startDateValue){
        
            if(typeof(startDateValue) != 'undefined' && startDateValue != null){
                
                jQuery('[id$=newEventEndDatePopupInput]').val(startDateValue);
            }
        }       
         
        function loadDependencies(ele){  
                var lastVlObj = jQuery.data(ele.currentTarget,'lastValue');
                
                if(!lastVlObj || (lastVlObj && lastVlObj.lastValue!=jQuery(ele.currentTarget).val())){
                    
                    jQuery(this).prev().val(this.value);
                    jQuery(this).prev().change();    
                
                    jQuery('.ui-combobox-container select:visible').each(function(){
                        var parent = jQuery(this).parent();
                        

                        jQuery('select:visible',parent).change();        
                        jQuery('select:visible',parent).combobox( { html: true, addClasses: 'ui-widget-combobox input-combobox'} )
                            .siblings( '.ui-autocomplete-input' )
                            .autocomplete( 'option', 'position', { my: "right top", at: "right bottom" } )
                            .autocomplete( { minLength : 0 } )
                            .autocomplete( 'widget' )       
                            .addClass( 'ui-widget-combobox-list' );
                    
                      
                            jQuery('.input-combobox',parent).bind('keydown',loadDependencies);
                            jQuery('.input-combobox',parent).bind('focus',loadDependencies);    
                            jQuery('.input-combobox',parent).bind('blur',loadDependencies);      
                            jQuery('.input-combobox',parent).mouseout(loadDependencies); 
                            jQuery('.input-combobox',parent).on('autocompleteselect',loadDependencies); 
                      
                    })
 
                    jQuery(".multiSelectPL_OP").show()         
                    jQuery('.multiSelectPicklistTable').css('display','none');
                    jQuery(".multiSelectPL_OP select").each(function(){
                                if(jQuery('.ui-multiselect',this).size()==0){
                                    jQuery(this).multiselect({
                                    height: "auto", width: "100%",
                                    noneSelectedText : "None selected",
                                    selectedText : function(numCheck, totalNum, arrCheck) {
                                    
                                        var text = '';
                                        for (var i=0; i < arrCheck.length; i++) {
                                            text += arrCheck[i].value + ', ';
                                        }                 
                                        if (text.indexOf(', ') >= 0) {
                                            text = text.substring(0, text.length - 2);            
                                        }           
                                        
                                        if (text.length > 40) {
                                            text = text.substring(0, 40) + '...';                    
                                        }
                                        
                                        return text;            
                                    },                
                                    create: function() { jQuery(".multiSelectPL_OP").show() }
                                })
                            }
                
                    })                  
                } 
                jQuery.data(ele.currentTarget,'lastValue',{lastValue:jQuery(ele.currentTarget).val()})
        }
        function editModeDisabled() {

        
            disableButton('#detailsSaveButton');            
            jQuery('#detailsEditButton').attr('value', 'Edit');         
            madeChanges = false;
            
            refreshTabs();
            enableTabs();
            jQuery('dt').css('vertical-align', 'baseline');
            jQuery('dt').css('valign', 'baseline');
        }
        
        function enableButton(sel) {
            jQuery(sel).removeClass('buttonDisabled');
            jQuery(sel).removeAttr('disabled');
        }
        
        function disableButton(sel) {
            jQuery(sel).addClass('buttonDisabled');
            jQuery(sel).attr('disabled', true);
        }
        
        
        function selectTab(index) {
            jQuery( '#tabs' ).tabs('option', {selected : index, active : index});
        }
        
        function disableNonSelectedTabs() {
            
            var selTabIndex = jQuery('#tabs [aria-hidden="false"]').index() - 1;
            var tabs = jQuery('#tabs [role="tabpanel"]').size();
            var toDisable = [];
            for (var i=0; i < tabs; i++) {
                
                if (i != selTabIndex) {
                    toDisable.push(i); 
                }
            }
            
            jQuery('#tabs').tabs( "option", "disabled", toDisable);
        }
        
        function enableTabs() {
            
            jQuery('#tabs').tabs( "option", "disabled", []);
        }
        
        function getData(remoteAction){
            var callback = function(query, next){
                Visualforce.remoting.Manager.invokeAction(
                    remoteAction,
                    query,
                    function(result, event){
                        var res = [];
                        for(i=0;  i < result.length; i++){
                            var name = result[i].Name.replace(/&#39;/g, "\'");
                            res.push(result[i]);  
                        }
                        next(res, query);
                        if(event.type === 'exception'){
                            console.log("exception");
                            console.log(event);
                        }
                    },
                {buffer: true, escape: true, timeout: 120000}
                );
            }
            return callback;
        }

        function openHostsPopup(){
            
            var pref = eval("{!JSENCODE(preFill)}");
            jQuery('#hosts_list_field')
                .autoSuggest(getData('{!$RemoteAction.Event_Detail_Controller.getHosts}'), {asHtmlID : "hosts", selectedValuesProp : "Id", 
                                    selectedItemProp: "Name", searchObjProps: "LastName, FirstName, OPENQ_Middle_Name",
                                    minChars: "2", startText: "", preFill : pref});
        
            jQuery('#popUpBkg').css('display', 'block');
            jQuery('#popUpHosts').css('display', 'block'); 
        }
        
        function openOwnersPopup(){
            
            var pref = eval("{!JSENCODE(preFillUsers)}");

            jQuery('#owners_list_field')
                .autoSuggest(getData('{!$RemoteAction.Event_Detail_Controller.getUsers}'), {asHtmlID : "owners", selectedValuesProp : "Id", 
                                    selectedItemProp: "Name", searchObjProps: "LastName, FirstName",
                                    minChars: "2", startText: "", preFill : pref});
    
            jQuery('#popUpBkg').css('display', 'block');
            jQuery('#popUpOwners').css('display', 'block'); 
        }
        
        function loadDatePickers() {                
                                
            jQuery( ".datepicker" ).datepicker({
                showOn: "both",
                buttonImage: "{!URLFOR($Resource.StylesScriptsImages,'img/datepicker-ico.png')}",
                buttonImageOnly: true
            });
        }
        
        function loadTimePickers() {
        
            jQuery(".timepicker" ).each(function(){ 
            
                jQuery(this).timepicker({
                    timeFormat: 'hh:mm tt',
                    stepMinute: 10
                });
            });
        }
        
        function viewRecord(nameObject, recordId){
              
              var tabIndex = jQuery('#tabs [aria-hidden="false"]').index() - 1;
              viewRecordApex(nameObject, recordId, tabIndex);
        }
        
        function editRecord(nameObject, recordId){
              var tabIndex = jQuery('#tabs [aria-hidden="false"]').index() - 1;
              editRecordApex(nameObject, recordId, tabIndex);
        }
                
        function loadCombos() {
            uiCombobox_('.ui-combobox-container select');
            
            jQuery('.ui-combobox-container select').each(function(i, e) {
                             
                var selectElem = jQuery(this);
                var val = selectElem.val();
                var inputElem = selectElem.next('input');
                inputElem.val(val);         
            });
        }
        
        function openGroupByPopup(){
            jQuery('#popUpBkg').css('display', 'block');
            jQuery('#popUpDiv').css('display', 'block'); 
        }
        
        function openNewEventPopup(){
        
            jQuery('#popUpBkg').css('display', 'block');
            jQuery('#popUpNewEvent').css('display', 'block');
            jQuery('#rightContainer').css('display', 'none');
        }
        
        function closeNewEventPopup(){
        
            jQuery('#popUpBkg').css('display', 'none');
            jQuery('#popUpNewEvent').css('display', 'none');
            jQuery('#rightContainer').css('display', 'block');          
        }
        
        function closeHostsPopup(){
            jQuery('#popUpBkg').css('display', 'none');
            jQuery('#popUpHosts').css('display', 'none'); 
            
            jQuery('.eventHostsSpan').each(function() {
                //alert(getHosts());
                jQuery(this).html(getHosts());
            });
        }
        
        function cancelHostsPopup(){
        
            jQuery('#popUpBkg').css('display', 'none');
            jQuery('#popUpHosts').css('display', 'none');
        }
        
        function closeGroupByPopup() {
            jQuery('#popUpBkg').css('display', 'none');
            jQuery('#popUpDiv').css('display', 'none'); 
        }
        
        function saveSubmitForApproval(){
        
            saveSubmitForApprovalApex();
        }
        
        function saveDetails() {
        
            var hostIds = jQuery("input[id$=as-values-hosts]").val();           
            var ownerIds = jQuery("input[id$=as-values-owners]").val();
                        
            saveDetailsApex(hostIds, ownerIds);
        }
        
        function getHosts() {
        
            var hostsCSV = '';
            
            jQuery('#as-selections-hosts .as-selection-item').each(function() {
            
                var text = jQuery(this).html();
                var indx = text.indexOf('</a>');
                
                if (indx > 0) {
                    var hostName = text.substring(indx + 4);
                    hostsCSV += hostName + ', ';
                }               
            });
            
            if (hostsCSV != '') {
                hostsCSV = hostsCSV.substring(0, hostsCSV.length - 2);
            }
        
            return hostsCSV;
        }
        
        function deleteEvent(){
        
            if(confirm('{!$Label.Event_Detail_Delete_Confirmation_Message}')){
                
                loadStart();
                
                deleteEventApex();              
            }
            
            return false;
        }
        
        function deleteRecord(objectName, recordId) {
            
            loadStart();
                        
            deleteRecordApex(objectName, recordId);                                 
        }
        
        // add busy cursor
        function loadStart() {
            jQuery('body').addClass('waiting');
        }
        
        // remove busy cursor
        function loadComplete() {       
            jQuery('body').removeClass('waiting');
        }
                        
        function addRecord(sel) {
                                                
            var tabIndex = jQuery('#tabs [aria-hidden="false"]').index() - 1;
            addRecordApex(sel, tabIndex);
                        
        }
        
        function setInputsDisabled(disabled) {        
            jQuery( ".datepicker" ).datepicker('option', 'disabled', disabled);
            if (disabled) {
                jQuery( "[id$='actData'] [id$='status']").attr('disabled', 'disabled');
            }
            else {
                jQuery( "[id$='actData'] [id$='status']").removeAttr('disabled');
                jQuery('[id$="actData"] [id$="status"] option[value=""]').remove();
            }
            
        }
    </script>    
    
    <apex:outputPanel id="ownerScript">
        <script>
                        
            function resetAutoSuggest(id) {
                
                jQuery('#'+id).html('');                
                jQuery('#'+id).html('<input type="text" name="participants_list" id="participants_list_field" />');         
            }       
                        
        </script>
    </apex:outputPanel>

    <apex:outputPanel id="editModeScript">
        <script>
        function enableEditMode() {
            
            var isLocked = {!processesExist};
            
            if(isLocked){
            
                alert('You cannot edit an event that is pending approval');
                return false;
                
            }else{
                                    
                var buttonVal = jQuery('#detailsEditButton').attr('value');
                
                if (buttonVal == 'Edit') {
                
                    jQuery('#detailsEditButton').attr('value', 'Cancel');           
                    disableNonSelectedTabs();       
                    enableEditModeApex();
                }
                else if (buttonVal == 'Cancel') {
                    
                    disableEditModeApex();
                }
            }       
        }
        </script>
    </apex:outputPanel>
    <style>
    
        *:focus { outline: none; }
        
        td{
        
            font-family: Verdana, sans-serif !important;
        }
        
        
        .progressbar {
            height:12px;
            width: 174px;
            float:right;
            margin-top: 4px;
        }
        
        .progressbar #caption {
            font-size: 8px;
            font-weight: bold;
            margin-top: -4px;
            margin-left: 78px;
            position: absolute;
        }
        
        .activityContainer {
        
            padding-bottom: 15px;
        }
        
        .ui-progressbar-value.ui-widget-header {
            background-color: #b2ca45;
        }
        
        .waiting {
            cursor: wait !important;
        }
        
        #tabs-2 {
            margin-bottom: 100px;
        }
        
        #bodyTable {
            background-color: #E6E6E5;
        }   
        
        <!-- max height for dropdown list -->
        .ui-autocomplete.ui-front.ui-menu.ui-widget.ui-widget-content.ui-corner-all {
            max-height: 200px;
            overflow: auto;
        }
        
        [id$='mainContainer'] {         
            padding-left: 222px;
            display: block;
        }
            
        [id$='leftContainer'] {
            float: left;
            min-width: 220px;
            float: left;
            width: 220px !important;
            display: inline-block;
            position: relative;
            left: -220px; 
            margin-right: -220px;
        }
        
        #rightContainer {
            min-width: 665px;
            float: none;
            margin-right: 0px;
            margin-left: 20px;
            margin-top: 40px;
            font-family: Verdana, sans-serif;   
        }
        
        
        #minimizeMe {
            
            border-radius: 0 5px 0 5px;
            -webkit-border-radius: 0 5px 0 5px;
            -moz-border-radius: 0 5px 0 5px;
            width: 15px;
            height: 15px;
            display: block;
            background-position: 0 -624px; 
            background-repeat: no-repeat;
            background-color: transparent;      
            background-image: url({!URLFOR($Resource.StylesScriptsImages,'img/main-nav-sprite.png')});
        }       
        
        #popUpBkg2 {
          z-index: 1500;
        }
        
        .ico {
            background-position: -16px -288px !important;
            position: absolute !important;
            top: 50% !important;
            left: -35px !important;
            height: 4px !important;
            width: 7px !important;
            margin-top: -2px !important;
        }
        
        .settings {
            width: 16px;
            height: 16px;
            background-position: 0px -1px;          
            background-image: url({!URLFOR($Resource.StylesScriptsImages,'img/cogsprite.png')});                            
        }
        
        .settings:hover{
        
            background-position: 0px -20px;
            cursor: pointer;
        }
        
         .newObject {
    
            background-repeat: no-repeat;
            background-size: 16px;
            height: 16px;
            width: 16px;
            float:right;
            background-color: transparent;
            margin-right: 6px;       
        }
        
        .newObject.easyAdd {                    
            background-image: url({!URLFOR($Resource.StylesScriptsImages,'img/plus.png')});
        }
        
        .newObject.easyAdd:hover {
             cursor: pointer;
        }
        
        #leftRight {
            width: 15px;
            height: 50px;
            right: 0px;
            top: 0px;
            position: absolute;
            border-radius: 0 5px 5px 0;
            -webkit-border-radius: 0 5px 5px 0;
            -moz-border-radius: 0 5px 5px 0;             
            float: left;
        }
        
        .popUpBkg {
        
            top: 0;
            left: 0;
            height: 100%; 
            width: 100%; 
            display: none; 
            background-color: black;            
            position: fixed;
            z-index: 1000;
            
            opacity: 0.6;
            filter: alpha(opacity=60); /* For IE8 and earlier */
        }
        
        .popUpDiv {
        
            position: absolute;
            left: 50%; 
            top: 30%; 
            width: 200px; 
            height: 200px;      
            display: none;      
            
            margin-left: -100px;
            margin-top: -100px;
            
            z-index: 1100;  
        }
        
        #groupByDiv, #innerDiv, #newEventDiv, #usersdiv {
        
            top: 30%;
            border-radius: 5px;
            background-color: white;
            border-width: 2px;
            border-style: solid;
            z-index: 9999;
            left: 50%;
            padding:10px;
            position: fixed;            
        }
        
        #groupByDiv {
            width: 300px;
            margin-left: -150px;
        }
        
        #innerDiv {        
            width: 500px;
            margin-left: -250px;
        }
        
        #newEventDiv {
        
            width: 400px;
            margin-left:-150px;
        }
        
        .popUpContainers {
            
            padding-top: 10px;
            padding-bottom: 10px;
        }
        
        .widgetHeader {
    
            font-weight: bold;
            padding-bottom: 10px;
        }
        
        .rich-tabpanel-content {
            border: none;
            border-radius: 5px;
            background-color: #fafafa;
        }
        
        .underlineFix {
        
            margin-top: -21px;
        }
        
        .eventHistoryFix {
            
            padding-top: 21px;
        }
        
        [id$='theTabPanel'] {
            margin-top: -43px;
        }
        
        .summaryHeader {
            height: 24px;
            border-bottom: 1px solid #245C8A;
            margin-bottom: 20px;
        }
        
        .summaryHeader {
            
        }
        
        .detailsContainer {
            padding: 1%;
            font-family: Verdana, sans-serif;
            color: rgb(85, 85, 85);
        }
        
        .detailsContainer dt {
            white-space: nowrap;            
        }
        
        .summaryRelListsContent {
            padding-bottom: 15px;
        }
        
        .headerSortDown .sort_arrow {
            position: absolute;
            height: 16px;
            width: 16px;
            background-position: 3px -8px;
            background-repeat: no-repeat;
            background-image: url({!URLFOR($Resource.StandaloneCommonImages,'img/arrowUpDown2.png')});          
        }
        
        .headerSortUp .sort_arrow {
            position: absolute;
            height: 16px;
            width: 16px;
            background-position: 3px 8px;
            background-repeat: no-repeat;
            background-image: url({!URLFOR($Resource.StandaloneCommonImages,'img/arrowUpDown2.png')});          
        }
        
        .btnOverride, .btnOverride:hover{
        
             font-style: Verdana, sans-serif !important; 
             color: #FFFFFF !important; 
             text-decoration: none !important;
             background-position: 0 0 !important;
             font-weight: normal !important;
        }
        
        a:hover {
            text-decoration: none !important;
        }
        
        img.ui-datepicker-trigger {
            margin-left: -16px;
            cursor: pointer;
        }
        
        .ui-datepicker-next span {
            width: 20px;
            height: 20px;
            background-position: 0 0;
            cursor: pointer;
            background-image: url({!URLFOR($Resource.StylesScriptsImages,'img/datepicker-arrows.png')});            
        }
        
        .buttonDisabled {
            cursor: default !important;
            opacity: 0.5;
            filter: alpha(opacity=50); /* For IE8 and earlier */
        }
                
        .ui-datepicker-prev span {
            width: 20px;
            height: 20px;
            background-position: 0 -20px;
            cursor: pointer;
            background-image: url({!URLFOR($Resource.StylesScriptsImages,'img/datepicker-arrows.png')});
        }
        
        .ui-widget-combobox + .ui-button .ui-icon {
        
            background: url({!URLFOR($Resource.StylesScriptsImages,'img/main-nav-sprite.png')}) no-repeat 0 -368px;
        }
        
        .lookupIcon {
            
            position: absolute;
            cursor: pointer;            
        }
        
        .lookupIcon:hover {
            background-position: top right;
        }
        
        /*  tabs styles */
        
        .ui-tabs-nav.ui-helper-reset.ui-helper-clearfix.ui-widget-header.ui-corner-all {
        
            position: absolute;
            margin-top: -51px;
            background: none;
            border: none;
        }
        
        .ui-state-default.ui-corner-top {
            background-color: #fafafa;
        }
        
        #tabs {
            border: none;
            background-color: #fafafa;
            display: none;
        }
        
        .tableHeader {
            cursor: pointer;
        }
        
        .fright {
            float: right;
        }
        
        .columnData {
            float: left;
            max-width: 400px;
            word-wrap: break-word;
        }
        
        .actionLink {
            cursor: pointer;
            color: rgb(48, 126, 188) !important;
            text-decoration: underline;
        }
        
        .actionLink:hover {
            color: #015ba7 !important;
            text-decoration: underline !important;
        }
        
        
        .ui-tabs-active.ui-state-active {
            background-color: #b2ca45;          
        }
        
        .ui-tabs-active.ui-state-active a {
            color: white;
        }
        
        .tablesorter .odd {
            background-color: #E5E2FF;
        }
        
        .oddRow {
            background-color: #E5E2FF;
        }
        
        .underlined {
            border-bottom: 1px solid #245C8A;
        }
        
        .assignToTr:hover {
        
          background-color: #CECBE6;
          cursor: pointer;
        }
        
        .basicPadding {
          padding: 5px;
        }
        
        .ui-multiselect-header {
            background-color: #b2ca45;
        }
        
        .ui-multiselect-header a  {
            color: #FFFFFF;       
        }
        
        .ui-multiselect-header a:hover {
            color: #FFFFFF;     
            text-decoration: underline !important;  
        }
        
        .multiSelectPL_OP {
            display: none;
        }
        
        #usersdiv .lookupIcon {
        
            position: relative !important;
        }
        
        .assignToTr [id$=assignedUser] {
            left : -30px;
            width : 0;
            position : fixed;
        } 
        
        .assignToTr [id$=assignedUser_mlktp] {
            
            display : none;
        }
        
        /* css for timepicker */
        .ui-timepicker-div .ui-widget-header { margin-bottom: 8px; }
        .ui-timepicker-div dl { text-align: left; }
        .ui-timepicker-div dl dt { height: 25px; margin-bottom: -25px; }
        .ui-timepicker-div dl dd { margin: 0 10px 10px 65px; }
        .ui-timepicker-div td { font-size: 90%; }
        .ui-tpicker-grid-label { background: none; border: none; margin: 0; padding: 0; }
        
        .ui-timepicker-rtl{ direction: rtl; }
        .ui-timepicker-rtl dl { text-align: right; }
        .ui-timepicker-rtl dl dd { margin: 0 65px 10px 10px; }   
        
.ui-datepicker-next span {
    background-position: -30px 0;
    cursor: pointer;
    height: 20px;
    width: 20px;
}

.ui-datepicker-prev span {
    background-position: -98px 0;
    cursor: pointer;
    height: 20px;
    width: 20px;
}

#actionButtons{
    
    float:right;
}

.btnCancelCustom{
    
    display: block;
    color: #ffffff !important;
    background-position: 0 0 !important;
    background-image: -webkit-gradient( linear, left top, left bottom, from( #D35654 ), to( #BC3633 ) ) !important;
    background-image: -webkit-linear-gradient( top, #D35654, #BC3633 ) !important;
    background-image: -moz-linear-gradient( top, #D35654, #BC3633 ) !important;
    background-image: -ms-linear-gradient( top, #D35654, #BC3633 ) !important;
    background-image: -o-linear-gradient( top, #D35654, #BC3633 ) !important;
    background-image: linear-gradient( top, #D35654, #BC3633 ) !important;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#D35654', endColorstr='#BC3633' ) !important;
    cursor: pointer;
    border: 1px solid #933834;
    padding: .2em 1em .3em 1em !important;
    text-decoration: none !important;
    vertical-align: baseline;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 11px !important;
    font-weight: normal !important;
    border-radius: 5px;
    line-height: 1;
    white-space: nowrap;
}

.btnCancelCustom:hover {
    background-image: -webkit-gradient( linear, left top, left bottom, color-stop(0%, #D35654), color-stop(55%, #BC3633), color-stop(100%, #D35654) ) !important;
    background-image: -webkit-linear-gradient( top, #D35654 0%, #BC3633 55%, #D35654 100% ) !important;
    background-image: -moz-linear-gradient( top, #D35654 0%, #BC3633 55%, #D35654 100% ) !important;
    background-image: -ms-linear-gradient( top, #D35654 0%, #BC3633 55%, #D35654 100% ) !important;
    background-image: -o-linear-gradient( top, #D35654 0%, #BC3633 55%, #D35654 100% ) !important;
    background-image: linear-gradient( top, #D35654 0%, #BC3633 55%, #D35654 100% ) !important;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#D35654', endColorstr='#BC3633' ) !important;
}

    </style>    
    
    <div class="breadcrumbs">
        You're here:&nbsp;
        <apex:outputLink value="{!$Page.openq__EventDashboard}">{!$Label.openq__event_label_plural}</apex:outputLink>
        /
        <span class="active">{!IF(createNewEvent, 'Create New '+$Label.openq__event_label, IF(currentEvent.openq__Name__c != null, currentEvent.openq__Name__c, 'Unnamed '+ $Label.openq__event_label))}</span>                
    </div>
    <div id="actionButtons">
        <apex:outputPanel rendered="{!$Objecttype.openq__Event__c.deletable}">
            <a href="#" class="btnCancelCustom" onclick="deleteEvent();">Delete {!$Label.Event_Label}</a>
        </apex:outputPanel> 
    </div>  
    <apex:form >        
        <div id="rightContainer" class="wi-gen gr b-card shado conc">
            <apex:outputPanel id="rightContentPanel">               
                
                <!-- Plan detail tabbed View -->
                <apex:outputPanel id="tabbedPanel">                     
                    <div id="tabs">
                        
                        <!-- Tab headers -->
                        <ul>
                        
                            <!-- Fixed tabs -->
                            <li><a href="#tabs-1">Summary</a></li>
                            <li><a href="#tabs-2">{!$Label.Event_Label_Detail_Tab} Details</a></li>
                            
                            <!-- Dynamic tabs (Category groups) -->
                            <apex:variable value="{!3}" var="rowNum"  />   
                            <apex:repeat value="{!tabs}" var="tab">
                                <li><a href="#tabs-{!rowNum}">{!tab.categoryName}</a></li>
                                <apex:variable value="{!rowNum + 1}" var="rowNum"  />
                            </apex:repeat>
                        </ul>
                                            
                        <!-- Actual tab content -->
                        <!-- SUMMARY TAB -->
                        <div id="tabs-1">
                            <div class="summaryHeader">
                                <h1 title="Click to Edit Plan Details" onclick="selectTab(1);" style="float: left; color: #245C8A; font-weight:bold; font-size: 24px; cursor: pointer;">
                                    {!currentEvent.Name__c}
                                </h1>               
                                <div style="clear: both;"></div>
                            </div>
                            <!-- Attributes section -->
                            <apex:outputPanel id="summaryDetailsContent" layout="block">
                            
                                <div style="float: left; width: 100%; font-size: 11px !important;">
                                
                                    <!-- left column -->
                                    <div class="detailsContainer" style="width: 53%; float: left;">
                                        <apex:repeat value="{!currentEventAttributes}" var="att">
                                            <apex:outputPanel layout="none" rendered="{!MOD(att.order, 2) == 0}">
                                                <dl>
                                                    <dt>{!att.attributeName}:</dt> 
                                                    <dd>
                                                                <apex:outputPanel layout="none" rendered="{!AND(att.type != 'Boolean', att.type != 'Reference')}">
                                                                    
                                                                      {!att.attributeValue}
                                                                    
                                                               </apex:outputPanel>                                                      
                                                               <apex:outputPanel layout="none" rendered="{!att.type == 'Reference'}">
                                                                    <apex:outputField value="{!currentEvent[att.apiName]}"/>                                                                                                                
                                                               </apex:outputPanel>                                                      
                                                                <apex:outputPanel layout="none" rendered="{!att.type == 'Boolean'}">
                                                                   
                                                                      <apex:inputCheckbox value="{!att.attributeValue}" disabled="true"/>
                                                                    
                                                                </apex:outputPanel>
                                                          </dd>   
                                                </dl>
                                            </apex:outputPanel>                                             
                                        </apex:repeat>  
                                    </div>
                                    
                                    <!-- right column -->
                                    <div class="detailsContainer" style="width: 43%; float: left;" >
                                        <apex:repeat value="{!currentEventAttributes}" var="att">
                                            <apex:outputPanel layout="none" rendered="{!MOD(att.order, 2) == 1}">
                                                <dl>
                                                    <dt>{!att.attributeName}:</dt>
                                                    <dd>
                                                                <apex:outputPanel layout="none" rendered="{!AND(att.type != 'Boolean', att.type != 'Reference')}">
                                                                    
                                                                      {!att.attributeValue}
                                                                    
                                                               </apex:outputPanel>                                                      
                                                               <apex:outputPanel layout="none" rendered="{!att.type == 'Reference'}">
                                                                    <apex:outputField value="{!currentEvent[att.apiName]}"/>                                                                                                                
                                                               </apex:outputPanel>                                                      
                                                                <apex:outputPanel layout="none" rendered="{!att.type == 'Boolean'}">
                                                                   
                                                                      <apex:inputCheckbox value="{!att.attributeValue}" disabled="true"/>
                                                                    
                                                                </apex:outputPanel>
                                                    </dd>                                 
                                                </dl>
                                            </apex:outputPanel>                                             
                                        </apex:repeat>      
                                    </div>
                                    
                                    <div style="clear: both;"></div>
                                    
                                    <!-- Related list retrieved from other tabs -->
                                    <apex:outputPanel id="relatedListsSummaryContent" style="padding-top: 20px;" layout="block">        
                                        <apex:variable value="{!2}" var="tabNum"  />                        
                                        <apex:repeat value="{!tabs}" var="tab">
                                            <apex:repeat value="{!tab.relatedLists}" var="relatedList" >                                    
                                                <apex:outputPanel styleClass="summaryRelListsContent" layout="block">
                                                    <div style="font-weight: bold;" class="underlined">
                                                        <div style="font-size: 15px; float: left; cursor: pointer;" title="Click to Add/Edit {!relatedList.labelObject}" onclick="selectTab({!tabNum});">{!relatedList.labelObject}</div>                               
                                                        <div style="clear: both;"></div>
                                                    </div>
                                                    <table class="tablesorter">                                         
                                                        <apex:outputPanel rendered="{!relatedList.fieldValues.size == 0}" layout="none" >
                                                            <tr><td><span> No records to display </span> </td></tr>
                                                        </apex:outputPanel>                                         
                                                        <apex:outputPanel id="relListsContent" rendered="{!relatedList.fieldValues.size > 0}" layout="none">                                               
                                                            <thead>
                                                                <tr>
                                                                    <apex:repeat value="{!relatedList.labelAttribute}" var="fv">                                
                                                                        <th><div class="columnData">{!fv.value}<span class="sort_arrow" style="float: right;"/></div></th>
                                                                    </apex:repeat>
                                                                </tr>
                                                            </thead> 
                                                            <tbody>
                                                                <apex:repeat value="{!relatedList.fieldValues}" var="fvv">
                                                                    <tr>
                                                                        <apex:repeat value="{!fvv.listValues}" var="lv">                                                                                                        
                                                                            <td style="vertical-align: {!IF(OR(relatedList.nameObject == 'Note', relatedList.nameObject == 'Attachment'), 'top', 'middle')} !important;">
                                                                            
                                                                                <apex:outputPanel rendered="{!IF(OR(OR(relatedList.nameObject != namespace+'Event_Speaker__c', lv.apiName != namespace+'Speaker_Name__c'), fvv.contactId == null), true, false)}">
                                                                                                                                                                         
                                                                                      <div class="columnData" style="vertical-align: middle !important; padding-left: 2px;">
                                                                                           <apex:outputtext value="{!lv.value}" />
                                                                                      </div>  
                                                                                    
                                                                                </apex:outputPanel>
                                                                                <apex:outputPanel rendered="{!IF(AND(AND(relatedList.nameObject == namespace+'Event_Speaker__c', lv.apiName == namespace+'Speaker_Name__c'), fvv.contactId != null), true, false)}">
                                                                                                                                                                         
                                                                                      <div class="columnData" style="vertical-align: middle !important; padding-left: 2px;">
                                                                                           <apex:outputLink value="/{!fvv.contactId}">{!lv.value}</apex:outputLink> 
                                                                                      </div>  
                                                                                    
                                                                                </apex:outputPanel>
                                                                            </td>
                                                                        </apex:repeat>
                                                                    </tr>
                                                                </apex:repeat>                                                                                                                              
                                                            </tbody>
                                                        </apex:outputPanel>                                             
                                                    </table>
                                                </apex:outputPanel>                                                                                                                                         
                                            </apex:repeat>
                                            <apex:variable value="{!tabNum + 1}" var="tabNum"  />
                                        </apex:repeat>  
                                    </apex:outputPanel>                                 
                                </div>                                                                      
                                <div style="clear: both;"></div>
                            </apex:outputPanel>
                        </div>                      
                        
                        <!-- DETAILS TAB -->
                        <div id="tabs-2">
                            <div class="summaryHeader">
                                <h1 style="float: left; color: #245C8A; font-weight:bold; font-size: 24px;">
                                    {!currentEvent.Name__c}
                                </h1>       
                                <div style="float: right;">
                                    <input id="detailsEditButton"  class="btnCustom default gr btnOverride" style="cursor: pointer; width: 70px; padding-right: 0; padding-left: 0; text-align: center;" type="button" value="Edit" onclick="enableEditMode();"  />
                                    <input disabled="disabled" id="detailsSaveButton"  class="btnCustom default gr btnOverride buttonDisabled" style="cursor: pointer; width: 70px; padding-right: 0; padding-left: 0; text-align: center;" type="button" value="Save"  onclick="saveDetails();" />
                                </div>                              
                            </div>
                            
                            <!-- Attributes section -->
                            <apex:outputPanel id="detailsContent" >                                 
                                <!-- left column -->
                                <div class="detailsContainer" style="width: 50%; float: left;">
                                    <apex:repeat value="{!currentEventAttributes}" var="att">
                                        <apex:variable var="helpText" value="{!$ObjectType.openq__Event__c.fields[att.apiName].inlineHelpText}" />
                                        
                                        <apex:outputPanel layout="none" rendered="{!MOD(att.order, 2) == 0}">
                                            
                                            <dl>
                                                <dt>
                                                    <apex:outputPanel id="helpTextBlock" rendered="{!AND(NOT(readOnlyMode), AND(helpText != null, helpText != ''))}" layout="none">
                                                        <c:HelpText helpText="{!helpText}"  leftPositioning="0" topPositioning="22" uniqueText="{!att.apiName}" />                                                  
                                                    </apex:outputPanel>
                                                </dt>
                                                <dt style="{!IF(AND(att.type == 'Long Text Area', AND(att.apiName != namespace+'Event_Hosts__c', att.apiName != namespace+'Event_Owners__c')), 'vertical-align: middle;', '')}">
                                                    <apex:outputPanel layout="none" rendered="{!AND(NOT(readOnlyMode), OR(att.apiName == namespace+'Start_Date__c', att.apiName == namespace+'End_Date__c'))}">
                                                        <span style="color: red;">*</span>
                                                    </apex:outputPanel>
                                                    {!att.attributeName}:
                                                </dt>                                                   
                                                <dd style="width: 100%;">
                                                    
                                                    <!-- If read only -->
                                                    <apex:outputPanel layout="none" rendered="{!OR(readOnlyMode, !att.editable)}">
                                                        
                                                        <apex:outputText value="{!att.attributeValue}" rendered="{!att.type != 'Boolean'}"/>                                                            
                                                        <apex:inputCheckbox value="{!att.attributeValue}" disabled="true" rendered="{!att.type == 'Boolean'}"/>                                                     
                                                    </apex:outputPanel>
                                                    
                                                    <!-- Else -->
                                                    <apex:outputPanel layout="none" rendered="{!AND(NOT(readOnlyMode), att.editable)}">
                                                                                                                
                                                        <!-- If date -->
                                                        <apex:inputText value="{!att.attributeValue}" styleClass="datepicker" style="border-radius: 5px; width: 100%;" rendered="{!att.type == 'Date'}"/>                                                               
                                                        
                                                        <!-- If datetime -->
                                                        <apex:outputText value="{!att.attributeValue}" rendered="{!att.type == 'Datetime'}"/>
                                                        
                                                        <!-- If number -->
                                                        <apex:inputText style="border-radius: 5px; width: 100%;" value="{!att.attributeValue}" rendered="{!OR(att.type == 'Integer', att.type == 'Double')}"/>
                                                        
                                                        <!-- If event host -->
                                                        <apex:outputPanel rendered="{!att.apiName == namespace+'Event_Hosts__c'}">
                                                            <span class="eventHostsSpan">{!att.attributeValue}</span>
                                                        </apex:outputPanel>
                                                        
                                                        <!-- If event owner -->
                                                        <apex:outputPanel rendered="{!att.apiName == namespace+'Event_Owners__c'}">
                                                            <span class="eventOwnersSpan">{!att.attributeValue}</span>
                                                        </apex:outputPanel>
                                                        
                                                        <!-- If timeZone -->
                                                        <apex:outputPanel styleClass="ui-combobox-container gr" layout="block" rendered="{!AND(att.type == 'LOV', att.apiName == namespace+'Timezone__c')}">                                                                
                                                            <apex:inputField styleClass="ui-combobox" value="{!currentEvent[att.apiName]}" />
                                                        </apex:outputPanel>
                                                        
                                                        <!-- If LOV -->
                                                        <apex:outputPanel layout="block" styleClass="ui-combobox-container gr"  rendered="{!AND(att.type == 'LOV', att.apiName != namespace+'Timezone__c')}">                                                               
                                                            <apex:inputField styleClass="ui-combobox" value="{!currentEvent[att.apiName]}" />
                                                        </apex:outputPanel>
                                                        
                                                        <!-- If Multipicklist -->
                                                        <apex:outputPanel styleClass="gr multiSelectPL_OP" layout="block" rendered="{!att.type == 'Multiselect'}"> 
                                                            <input type="hidden" class="defautlValues" value="{!currentEvent[att.apiName]}" />                                                             
                                                            <apex:inputField value="{!currentEvent[att.apiName]}" styleClass="multiSelectPL" />
                                                        </apex:outputPanel>                                                     
                                                        
                                                        <!-- If Text -->
                                                        <apex:inputText style="border-radius: 5px; width: 100%;" value="{!att.attributeValue}" rendered="{!AND(AND(AND(AND(att.type == 'Text', att.apiName != namespace+'Event_Hosts__c'), att.apiName != namespace+'Start_Time__c'), att.apiName != namespace+'End_Time__c'), att.apiName != namespace+'Event_Hosts__c')}"/>
                                                        
                                                        <!-- If Long Text Area -->
                                                        <apex:inputTextArea style="border-radius: 5px; width: 100%;" value="{!att.attributeValue}" rendered="{!AND(att.type == 'Long Text Area', AND(att.apiName != namespace+'Event_Hosts__c', att.apiName != namespace+'Event_Owners__c'))}"/>                                                        
                                                        
                                                        <!-- If Time -->
                                                        <apex:inputText style="border-radius: 5px; width: 100%;" value="{!att.attributeValue}" styleClass="timepicker" rendered="{!OR(att.apiName == namespace+'Start_Time__c', att.apiName == namespace+'End_Time__c')}"></apex:inputText>
                                                        
                                                        <!-- If Boolean -->
                                                        <apex:inputCheckbox value="{!att.attributeValue}" disabled="false" rendered="{!att.type == 'Boolean'}"/>
                                                        
                                                        <!-- If Reference -->
                                                        <apex:inputField value="{!currentEvent[att.apiName]}" rendered="{!att.type == 'Reference'}"/>
                                                        
                                                        <!-- lookup icons, rendered if EventHosts or EventOwners field is included -->
                                                        <apex:outputPanel styleClass="lookupIcon" rendered="{!att.apiName == namespace+'Event_Hosts__c'}" onclick="openHostsPopup();" />
                                                        <apex:outputPanel styleClass="lookupIcon" rendered="{!att.apiName == namespace+'Event_Owners__c'}" onclick="openOwnersPopup();"/>
                                                        
                                                    </apex:outputPanel>
                                                </dd>                                                                                                           
                                            </dl>
                                        </apex:outputPanel>                                             
                                    </apex:repeat>  
                                </div>
                                
                                <!-- right column -->
                                <div class="detailsContainer" style="width: 46%; float: left;" >
                                    <apex:repeat value="{!currentEventAttributes}" var="att">
                                        <apex:variable var="helpText" value="{!$ObjectType.openq__Event__c.fields[att.apiName].inlineHelpText}" />
                                        <apex:outputPanel layout="none" rendered="{!MOD(att.order, 2) == 1}">
                                            <dl>
                                                <dt>
                                                    <apex:outputPanel id="helpTextBlock" rendered="{!AND(NOT(readOnlyMode), AND(helpText != null, helpText != ''))}" layout="none">
                                                        <c:HelpText helpText="{!helpText}"  leftPositioning="0" topPositioning="22" uniqueText="{!att.apiName}" />                                                  
                                                    </apex:outputPanel>
                                                </dt>
                                                <dt style="{!IF(AND(att.type == 'Long Text Area', AND(att.apiName != namespace+'Event_Hosts__c', att.apiName != namespace+'Event_Owners__c')), 'vertical-align: middle;', '')}">                                                        
                                                    <apex:outputPanel layout="none" rendered="{!AND(NOT(readOnlyMode), OR(att.apiName == namespace+'Start_Date__c', att.apiName == namespace+'End_Date__c'))}">
                                                        <span style="color: red;">*</span>
                                                    </apex:outputPanel>
                                                    {!att.attributeName}:
                                                </dt>                                                   
                                                <dd style="width: 100%;">
                                                    
                                                    <!-- If read only -->
                                                    <apex:outputPanel layout="none" rendered="{!OR(readOnlyMode, !att.editable)}">
                                                        
                                                        <apex:outputText value="{!att.attributeValue}" rendered="{!AND(att.type != 'Boolean', att.type != 'Reference')}"/>                                                          
                                                        <apex:inputCheckbox value="{!att.attributeValue}" disabled="true" rendered="{!att.type == 'Boolean'}"/>                                                     
                                                        <apex:outputField value="{!currentEvent[att.apiName]}" rendered="{!att.type == 'Reference'}"/>                                                  
                                                    </apex:outputPanel>
                                                    
                                                    <!-- Else -->
                                                    <apex:outputPanel layout="none" rendered="{!AND(NOT(readOnlyMode), att.editable)}">
                                                        
                                                        <!-- If date -->
                                                        <apex:inputText value="{!att.attributeValue}" styleClass="datepicker" style="border-radius: 5px; width: 100%;" rendered="{!att.type == 'Date'}"/>
                                                        
                                                        <!-- If number -->
                                                        <apex:inputText style="border-radius: 5px; width: 100%;" value="{!att.attributeValue}" rendered="{!OR(att.type == 'Integer', att.type == 'Double')}"/>
                                                        
                                                        <!-- If datetime -->
                                                        <apex:outputText value="{!att.attributeValue}" rendered="{!att.type == 'Datetime'}"/>
                                                        
                                                        <!-- If event host -->
                                                        <apex:outputPanel rendered="{!att.apiName == namespace+'Event_Hosts__c'}">
                                                            <span class="eventHostsSpan">{!att.attributeValue}</span>
                                                        </apex:outputPanel>
                                                        
                                                        <!-- If event owner -->
                                                        <apex:outputPanel rendered="{!att.apiName == namespace+'Event_Owners__c'}">
                                                            <span class="eventOwnersSpan">{!att.attributeValue}</span>
                                                        </apex:outputPanel>                                                     
    
                                                        <!-- If Multipicklist -->
                                                        <apex:outputPanel styleClass="gr multiSelectPL_OP" layout="block" rendered="{!att.type == 'Multiselect'}">             
                                                              <input type="hidden" class="defautlValues" value="{!currentEvent[att.apiName]}" />
                                                              <apex:inputField value="{!currentEvent[att.apiName]}" styleClass="multiSelectPL" />
                                                        </apex:outputPanel>
                                                        
                                                        <!-- If timeZone -->
                                                        <apex:outputPanel styleClass="ui-combobox-container gr" layout="block" rendered="{!AND(att.type == 'LOV', att.apiName == namespace+'Timezone__c')}">                                                                
                                                            <apex:inputField styleClass="ui-combobox" value="{!currentEvent[att.apiName]}" />
                                                        </apex:outputPanel>
                                                        
                                                        <!-- If LOV -->
                                                        <apex:outputPanel layout="block" styleClass="ui-combobox-container gr"  rendered="{!AND(att.type == 'LOV', att.apiName != namespace+'Timezone__c')}">                                                               
                                                            <apex:inputField styleClass="ui-combobox" value="{!currentEvent[att.apiName]}" />
                                                        </apex:outputPanel>
                                                                
                                                        <!-- If Text -->
                                                        <apex:inputText style="border-radius: 5px; width: 100%;" value="{!att.attributeValue}" rendered="{!AND(AND(AND(att.type == 'Text', att.apiName != namespace+'Event_Hosts__c'), att.apiName != namespace+'Start_Time__c'), att.apiName != namespace+'End_Time__c')}"/>
                                                        
                                                        <!-- If Long Text Area -->
                                                        <apex:inputTextArea style="border-radius: 5px; width: 100%;" value="{!att.attributeValue}" rendered="{!AND(att.type == 'Long Text Area', AND(att.apiName != namespace+'Event_Hosts__c', att.apiName != namespace+'Event_Owners__c'))}"/>                                                        
                                                        
                                                        <!-- If Time -->
                                                        <apex:inputText style="border-radius: 5px; width: 100%;" value="{!att.attributeValue}" styleClass="timepicker" rendered="{!OR(att.apiName == namespace+'Start_Time__c', att.apiName == namespace+'End_Time__c')}"></apex:inputText>
                                                        
                                                        <!-- If Boolean -->
                                                        <apex:inputCheckbox value="{!att.attributeValue}" disabled="false" rendered="{!att.type == 'Boolean'}"/>
                                                        
                                                        <!-- If Reference -->
                                                        <apex:inputField value="{!currentEvent[att.apiName]}" rendered="{!att.type == 'Reference'}"/>
                                                        
                                                        <!-- lookup icon, rendered if Event Hosts is included -->
                                                        <apex:outputPanel styleClass="lookupIcon" rendered="{!att.apiName == namespace+'Event_Hosts__c'}" onclick="openHostsPopup();" />
                                                        <apex:outputPanel styleClass="lookupIcon" rendered="{!att.apiName == namespace+'Event_Owners__c'}" onclick="openOwnersPopup();"/>
    
                                                    </apex:outputPanel>
                                                </dd>                                                                                                           
                                            </dl>
                                        </apex:outputPanel>                                             
                                    </apex:repeat>      
                                </div>
                                
                                <div style="clear: both;"></div>
                            </apex:outputPanel>
                        </div>                      
                        
                        <!-- DYNAMIC TABS -->
                        <apex:variable value="{!3}" var="rowNum"  />   
                        <apex:repeat value="{!tabs}" var="tab">
                            <div id="tabs-{!rowNum}">
                                <div class="summaryHeader">
                                    <h1 style="color: #245C8A; font-weight:bold; font-size: 24px;">
                                        {!currentEvent.openq__Name__c}
                                    </h1>
                                    <apex:outputPanel rendered="{!tab.categoryApiName == namespace+'Event__Approval'}">                                 
                                        <div style="float: right;">
                                            <apex:outputPanel id="historyButtons">                                              
                                                <apex:outputPanel id="submitApprovalDiv">
                                                    <apex:outputPanel layout="none" rendered="{!!processesExist}">
                                                        <input id="submitForApprovalBtn" class="btnCustom default gr btnOverride" style="cursor: pointer; width: 165px; padding-right: 0; padding-left: 0; text-align: center;" type="button" value="Submit For Approval" onclick="submitForApproval();" />
                                                    </apex:outputPanel>
                                                </apex:outputPanel>
                                            </apex:outputPanel>
                                        </div>
                                    </apex:outputPanel>                                     
                                </div>
                                <apex:outputPanel id="eventHistoryAttributes" layout="block" rendered="{!tab.categoryApiName == namespace+'Event__Approval'}">
                                    <apex:outputPanel rendered="{!isCurrentUserProcessActor}">
                                        <apex:commandButton id="rejectRecordButton" styleClass="btnCancelCustom default gr btnOverride" style="cursor: pointer; width: 100px; display: inline; margin-right: 20px; padding-right: 0; padding-left: 0; text-align: center;" value="Reject" onclick="if(!confirm('Are you sure you want to reject this record?'))return false;" action="{!rejectRecord}" rerender="eventHistoryAttributes, historyButtons, validationHistory, pageMsgs, editModeScript"/>                                     
                                        <apex:commandButton id="approveRecordButton"  styleClass="btnCustom default gr btnOverride" style="cursor: pointer; width: 100px; padding-right: 0; padding-left: 0; text-align: center;" value="Approve" onclick="if(!confirm('Are you sure you want to approve this record?'))return false;" action="{!approveRecord}" rerender="eventHistoryAttributes, historyButtons, validationHistory, pageMsgs, editModeScript"/>                                       
                                        <div style="margin-top: 20px; margin-bottom: 20px;">
                                            <apex:outputLabel value="Comments: " for="comments"/>                                       
                                            <apex:inputTextArea rows="8" cols="50" style="border-radius: 5px;" value="{!approvalComments}" id="comments" />
                                        </div>
                                    </apex:outputPanel>                                 
                                    <apex:outputPanel rendered="{!!processesExist}">
                                        <div style="margin-top: 20px; margin-bottom: 20px;">
                                            <apex:outputLabel value="Submission Comments " for="comments"/>                                     
                                            <apex:inputTextArea rows="8" cols="50" style="border-radius: 5px;" value="{!submissionComments}" />
                                        </div>
                                    </apex:outputPanel>
                                    <apex:outputPanel id="historyComponent">
                                        <c:Approval_History recordId="{!currentEvent.Id}" />
                                    </apex:outputPanel>                                                                     
                                </apex:outputPanel>
                                
                                <apex:repeat value="{!tab.relatedLists}" var="relatedList" >                                    
                                    <apex:outputPanel id="relatedListsContent" layout="block" style="padding-bottom: 15px;">
                                        <apex:outputPanel layout="block" style="font-weight: bold; padding-bottom: 5px;" styleClass="underlined">
                                            <apex:outputPanel style="float: left; font-size: 15px;">{!relatedList.labelObject}</apex:outputPanel>                                               
                                            <apex:outputPanel rendered="{!relatedList.nameObject != namespace+'Event__Approval'}">
                                                <div style="float: right;" >                                        
                                                    <span title="Click to Add {!relatedList.labelObject}" class="newObject easyAdd" style="margin-top: 3px;" onclick="addRecord('{!relatedList.nameObject}');">
                                                    </span>
                                                </div>
                                                <div style="clear: right;"></div>
                                            </apex:outputPanel>
                                        </apex:outputPanel>
                                                                                <table class="tablesorter">                                         
                                            <apex:outputPanel rendered="{!relatedList.fieldValues.size == 0}" layout="none" >
                                                <tr><td><span> No records to display </span> </td></tr>
                                            </apex:outputPanel>                                         
                                            <apex:outputPanel id="relListsContent" rendered="{!relatedList.fieldValues.size > 0}" layout="none">                                               
                                                <thead>
                                                    <tr>
                                                        <apex:repeat value="{!relatedList.labelAttribute}" var="fv">                                
                                                            <th>
                                                                <div class="columnData">{!fv.value}<span class="sort_arrow" style="float: right;"></span></div>                                                                 
                                                            </th>
                                                        </apex:repeat>
                                                        <apex:outputPanel layout="none">
                                                            <th><div class="fright actionsColumn">Actions</div></th>
                                                        </apex:outputPanel> 
                                                    </tr>
                                                </thead> 
                                                <tbody id="{!relatedList.nameObject}">      
                                                    <apex:repeat value="{!relatedList.fieldValues}" var="fvv">
                                                        <tr>
                                                            <apex:repeat value="{!fvv.listValues}" var="lv">                                                
                                                                <td style="vertical-align: {!IF(OR(relatedList.nameObject == 'Note', relatedList.nameObject == 'Attachment'), 'top', 'middle')} !important;">   
    <!--                                                                          <div class="columnData" style="vertical-align: middle !important;"> -->
    <!--                                                                               <apex:outputtext escape="false" value="{!lv.value}" /> -->
                                                                           <!-- rendered="{!fvv.recordId != null}" -->  
    <!--                                                                               <apex:outputtext rendered="{!fvv.recordId == null}" escape="false" value="NEW VALUE!" /> -->
    <!--                                                                          </div>   -->
                                                                      
                                                                      <apex:outputPanel rendered="{!IF(OR(OR(relatedList.nameObject != namespace+'Event_Speaker__c', lv.apiName != namespace+'Speaker_Name__c'), fvv.contactId == null), true, false)}">
                                                                                                                                                                         
                                                                              <div class="columnData" style="vertical-align: middle !important; padding-left: 2px;">
                                                                                   <apex:outputtext value="{!lv.value}" />  
                                                                              </div>  
                                                                            
                                                                        </apex:outputPanel>
                                                                        <apex:outputPanel rendered="{!IF(AND(AND(relatedList.nameObject == namespace+'Event_Speaker__c', lv.apiName == namespace+'Speaker_Name__c'), fvv.contactId != null), true, false)}">
                                                                                                                                                                 
                                                                              <div class="columnData" style="vertical-align: middle !important; padding-left: 2px;">
                                                                                   <apex:outputLink value="/{!fvv.contactId}">{!lv.value}</apex:outputLink> 
                                                                              </div>  
                                                                            
                                                                        </apex:outputPanel>
                                                                      
                                                                                    
                                                                </td>
                                                            </apex:repeat>
                                                            <apex:outputPanel layout="none" rendered="{!OR(relatedList.nameObject != namespace+'Interaction__c', !fvv.isHeaderOnly)}"> 
                                                                <td>
                                                                    <div class="fright">
                                                                        <apex:outputPanel >
                                                                            <apex:outputPanel layout="none" >
                                                                                <a class="actionLink" onclick="viewRecord('{!relatedList.nameObject}', '{!fvv.recordId}');">View</a>
                                                                                |&nbsp;
                                                                            </apex:outputPanel>
                                                                            <a class="actionLink" onclick="editRecord('{!relatedList.nameObject}', '{!fvv.recordId}');">Edit</a>                                                                                                                                                
                                                                        </apex:outputPanel>
                                                                          |
                                                                        <apex:outputPanel >                                                                            
                                                                            <a onclick="deleteRecord('{!relatedList.nameObject}', '{!fvv.recordId}');" class="actionLink" style="cursor: pointer;">Del</a>                                                                        
                                                                        </apex:outputPanel>
                                                                    </div>                                                                  
                                                                </td>
                                                            </apex:outputPanel>
                                                        </tr>
                                                    </apex:repeat>                                                                                                                  
                                                </tbody>
                                            </apex:outputPanel>                                             
                                        </table>                                        
                                    </apex:outputPanel> 
                                </apex:repeat>                                  
                            </div>
                            <apex:variable value="{!rowNum + 1}" var="rowNum"  />
                        </apex:repeat>                          
                    </div>                                      
                </apex:outputPanel>             
            </apex:outputPanel> 
        </div>
        <apex:actionFunction action="{!enableEditMode}" name="enableEditModeApex" rerender="detailsContent" oncomplete="editModeEnabled();"/>           
        <apex:actionFunction action="{!disableEditMode}" name="disableEditModeApex" immediate="true" rerender="detailsContent" oncomplete="editModeDisabled();"/>
        
        <apex:actionFunction action="{!deleteRecord}" name="deleteRecordApex" rerender="relatedListsContent, relatedListsSummaryContent, relListsContent" oncomplete="loadComplete(); refreshColumnSorting();" >
            <apex:param name="param1" assignTo="{!objectNameToDelete}" value=""/>
            <apex:param name="param2" assignTo="{!recordIdToDelete}" value=""/>
        </apex:actionFunction>
        
        <apex:actionFunction action="{!deleteEvent}" name="deleteEventApex" rerender="pageMsgs" oncomplete="loadComplete();"/>
        
        <apex:actionFunction action="{!addRecord}" name="addRecordApex" rerender="relatedListsContent, relatedListsSummaryContent, pageMsgs" oncomplete="loadComplete();" >
            <apex:param name="param1" assignTo="{!objectNameToAdd}" value=""/>
            <apex:param name="param2" assignTo="{!tabId}" value=""/>
        </apex:actionFunction>
        
        <apex:actionFunction action="{!viewRecord}" name="viewRecordApex" rerender="">
            <apex:param name="param1" assignTo="{!objectNameToView}" value=""/>
               <apex:param name="param2" assignTo="{!recordIdToView}" value=""/>
               <apex:param name="param3" assignTo="{!tabId}" value=""/>
           </apex:actionFunction>
    
        <apex:actionFunction action="{!editRecord}" name="editRecordApex" rerender="">
            <apex:param name="param1" assignTo="{!objectNameToEdit}" value=""/>
            <apex:param name="param2" assignTo="{!recordIdToEdit}" value=""/>
            <apex:param name="param3" assignTo="{!tabId}" value=""/>
        </apex:actionFunction>
        
        <apex:actionFunction action="{!saveDetails}" name="saveDetailsApex" rerender="detailsContent, leftContainer, sideBar, summaryDetailsContent, tabbedPanel, daysRemaining" oncomplete="editModeDisabled(); selectTab(1); refreshColumnSorting();" >
            <apex:param name="param1" assignTo="{!selectedHostIds}" value=""/>
            <apex:param name="param2" assignTo="{!selectedOwnersIds}" value=""/>
        </apex:actionFunction>
        
        <apex:actionFunction action="{!submitForApproval}" name="submitForApprovalApex" rerender="pageMsgs, historyButtons, eventHistoryAttributes, editModeScript"/>
    </apex:form>
    <!-- POPUPS GO HERE -->
    <apex:form >
        <!-- Owners popup -->
        <div id="popUpHosts" class="popUpDiv">          
            <div id="innerDiv">
                <div>
                    Event Hosts:
                    <div class="ver" id="hosts_list_field_container">
                        <input type="text" name="hosts_list" id="hosts_list_field" />
                    </div>    
                </div>
                <div style="margin-left: 190px;">
                    <div style="display:inline-block;">
                        <apex:commandButton style="width: 60px;" value="Cancel" onclick="cancelHostsPopup(); return false;" rerender="" />
                    </div>
                    <div style="display: inline-block">                     
                        <apex:commandButton style="width: 60px;" value="Done" onclick="closeHostsPopup(); return false;" rerender="" />                                                                         
                    </div>              
                </div> 
            </div>
        </div>
        <!-- New event popup -->
        <div id="popUpNewEvent" class="popUpDiv">
            <div id="newEventDiv">
                <div> 
                    <apex:outputPanel styleClass="popUpContainers">
                        <div class="widgetHeader">
                            New {!$Label.openq__event_label}
                        </div>
                         
                        <apex:panelGrid columns="2">
                            <div>
                                <span>Name: &nbsp;</span>                           
                                <apex:inputField value="{!newEvent.openq__Name__c}" style="border-radius: 5px;"/>
                            </div>
                                                   
                            
                            <div>
                                <span>{!$Label.Event_Label} Type: &nbsp;</span>
                                <apex:selectList value="{!newEventType}" multiselect="false" size="1" style="border-radius: 5px;">
                                    <apex:selectOptions value="{!newEventTypeOptions}"/>
                                </apex:selectList>
                            </div>
                           <div>
                           <span>
                           <span style="color: red;">*</span>
                           <span>Business Segment: &nbsp; </span>
                           <apex:selectList size="1" value="{!newSegment}" required="true" multiselect="false" style="border-radius: 5px;"> 
                            <apex:selectOptions value="{!newSegmentoptions}"/ >
                            </apex:selectList>
                            </span>
                            </div>
                            
                                                                             
                            <div>
                                <span> 
                                    <span style="color: red;">*</span>
                                    Start Date &nbsp;
                                </span>
                                <apex:inputText value="{!newEventStartDate}" styleClass="datepicker" style="border-radius: 5px;" onchange="populateDefaultEndDate(this.value);"/>
                            </div>
                            <div>
                                <span>
                                    
                                    Start Time &nbsp;
                                </span>
                                <apex:inputText value="{!newEventStartTime}" styleClass="timepicker"/>                                                              
                            </div>
                            <div>
                                <span>
                                    <span style="color: red;">*</span>
                                    End Date &nbsp;
                                </span>
                                <apex:inputText id="newEventEndDatePopupInput" value="{!newEventEndDate}" styleClass="datepicker" style="border-radius: 5px;" />
                            </div>
                            <div>
                                <span> 
                                    End Time &nbsp;
                                </span>  
                                <apex:inputText value="{!newEventEndTime}" styleClass="timepicker" />                                                               
                            </div>
                        </apex:panelGrid>                           
                    </apex:outputPanel> 
                </div>
                <apex:outputPanel id="newEventErrorText">
                    <apex:outputText value="{!newEventErrorText}" rendered="{!newEventErrorText != null}" style="color: red; float:left;"/>
                </apex:outputPanel>
                <div>
                    <div style="float: right;">                     
                        <apex:commandButton value="Cancel" action="{!cancelNewEvent}" rerender="detailsContent, leftContainer, sideBar, summaryDetailsContent, tabbedPanel"/>
                        <apex:commandButton value="Save" action="{!saveNewEvent}" rerender="newEventErrorText, detailsContent, leftContainer, sideBar, summaryDetailsContent, tabbedPanel"/>                                                    
                    </div>              
                </div>
            </div>
        </div>
        <!-- Owner popup -->
        <div id="popUpOwners" class="popUpDiv">         
            <div id="innerDiv">
                <div>
                    Plan Owners:
                    <div class="ver" id="owners_list_field_container">
                        <input type="text" name="owners_list" id="owners_list_field" />
                    </div>    
                </div>
                <div style="margin-left: 190px;">
                    <div style="display:inline-block;">
                        <apex:commandButton style="width: 60px;" value="Cancel" onclick="cancelOwnerPopup(); return false;" rerender="" />
                    </div>
                    <div style="display: inline-block">                     
                        <apex:commandButton style="width: 60px;" value="Done" onclick="closeOwnerPopup(); return false;" rerender="" />                                                                         
                    </div>              
                </div> 
            </div>
        </div>
    </apex:form>
</apex:page>