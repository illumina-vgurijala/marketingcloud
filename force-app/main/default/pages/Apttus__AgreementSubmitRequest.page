<!-- 
    Apttus Contract Management
    AgreementSubmitRequest
     
    @2009-2020 Apttus Inc. All rights reserved.

 -->
<apex:page standardController="Apttus__APTS_Agreement__c" 
		   extensions="Apttus.AgreementSubmitRequestController" >
	
	<Apttus_Base2:UsageDataComponent2 ProdName="{!systemSettingforUsageAnalytics['productName']}" ProdVersion="{!systemSettingforUsageAnalytics['productVersion']}"/>
	
	<script type="text/javascript" src="/soap/ajax/30.0/connection.js"></script>
	<script type="text/javascript" src="/soap/ajax/30.0/apex.js"></script>
	<apex:include pageName="Apttus__ComplyJSLibInclude" />
	
	<apex:stylesheet value="{!URLFOR($Resource.Apttus__YUILibrary, '/yui/build/assets/skins/sam/skin.css')}" />
 
	<apex:includescript value="{!URLFOR($Resource.Apttus__YUILibrary, '/yui/build/yahoo-dom-event/yahoo-dom-event.js')}" />
	<apex:includescript value="{!URLFOR($Resource.Apttus__YUILibrary, '/yui/build/dragdrop/dragdrop-min.js')}" />
	<apex:includescript value="{!URLFOR($Resource.Apttus__YUILibrary, '/yui/build/container/container-min.js')}" />
	<apex:includescript value="{!URLFOR($Resource.Apttus__YUILibrary, '/yui/build/animation/animation-min.js')}" />
    <apex:includeScript value="/support/console/46.0/integration.js"/>  
	
	<apex:outputPanel id="classicPanel" rendered="{!!($User.UIThemeDisplayed == 'Theme4d' || $User.UIThemeDisplayed == 'Theme4t' || $User.UIThemeDisplayed == 'Theme4u')}">
	<script>
    
	    // Create a namespace for our custom functions
	    YAHOO.namespace("force.com");
		
		// wait panel
		
		/**
		 * Builds the wait panel.
		 */
	    YAHOO.force.com.buildWaitPanel = function() {
	        document.body.className = document.body.className + " yui-skin-sam";
	        YAHOO.force.com.waitPanel = new YAHOO.widget.Panel(
	            "waitPanel",  // The id of our dialog container
	            { 
	                    width           :   "300px", // You can play with this until it's right
	                    visible         :   false,   // Should be invisible when rendered
	                    draggable       :   false,   // Make the dialog draggable
	                    close           :   false,   // Don't include a close title button
	                    modal           :   true,    // Make it modal
	                    fixedCenter     :   true,    // Keep centered if window is scrolled
	                    zindex          :   40,      // Make sure it's on top of everything
	                    constraintoviewport: true,
	                    
	                    // This line adds the appear/disapper fade effect
	                    effect			:   {effect:YAHOO.widget.ContainerEffect.FADE,duration:0.25}
        							
	            }
	        );
	        
	        // header
	        YAHOO.force.com.waitPanel.setHeader("{!JSINHTMLENCODE($Label.SubmittingAgreement)}");
			// set image
			YAHOO.force.com.waitPanel.setBody('<center><img src="{!URLFOR($Resource.Image_LoadingPage)}" /></center>');
	        // Render the dialog to the document.body level of the DOM
	        YAHOO.force.com.waitPanel.render(document.body);
	        
	    }
	    
	    // Function called when the DOM is ready to create the dialog,
    	// render the dialog into the document body, add our dialog skin
    	// css to the body tag, and wire up the buttons on our dialog   
		YAHOO.force.com.onDOMReady = function() {
			
			// build the wait panel
			YAHOO.force.com.buildWaitPanel();
			// show modal panel
			YAHOO.force.com.waitPanel.show();
			// init process
			//btnInitProcess.click();
			// initialize the controller
			doInit();
	        
		}
		
	    // build the panel as soon as the DOM is in a usable state
		YAHOO.util.Event.onDOMReady(YAHOO.force.com.onDOMReady);   	
		
	</script>
  </apex:outputPanel>
	
  <apex:outputPanel id="lightningPanel"  rendered="{!($User.UIThemeDisplayed == 'Theme4d' || $User.UIThemeDisplayed == 'Theme4t' || $User.UIThemeDisplayed == 'Theme4u')}">
    <script>
        setTimeout(function() {
        doInit();
        }, 1000);
    </script>
    <apex:slds />
    <div class="slds-scope">    
    <!-- SPINNER -->
         <div id="spinner" class="slds-spinner_container" >
              <div role="status" class="slds-spinner slds-spinner--large slds-spinner--brand">
                   <div class="slds-spinner__dot-a"></div>
                   <div class="slds-spinner__dot-b"></div>
              </div>
         </div>
    <!-- / SPINNER -->    
    </div>
    </apex:outputPanel>

	<script type="text/javascript"> 
		
        /**
         * Generate the document
         */
        function doSubmitRequestJS() {
            
            var exception = null;
           
            try {
            
                var timeoutMillis = parseInt("{!CallTimeoutMillis}") - 2000;
                
                // show modal panel for classic
                if(document.getElementById('{!$Component.classicPanel}') != null) {
                    YAHOO.force.com.waitPanel.show();
                }
                // show lightning panel  
                else if(document.getElementById('{!$Component.lightningPanel}') != null) {
                   document.getElementById('spinner').className += ' slds-show';
                }
                // delay to allow prepare step to run   
                setTimeout(function() {
                    try {
                        // generate the document
                        doSubmitRequest();
                    } catch (e) {
                        erroralert("submitRequest():", e);
                        // back to agreement detail page
                        goBack();
                        
                    } 
                    
                }, 1000);
                
                // delay until timeout  
                gTimeoutId = setTimeout(function() {
                                try {
                                    // handle timeout
                                    afterTimeout();
                                } catch (e) {
                                    erroralert("afterTimeout():", e);
                                    // back to agreement detail page
                                    goBack();
                                    
                                } 
                    
                             }, timeoutMillis);
                             
            } catch(ex) {
                exception = ex;
                // hide modal panel for classic
                if(document.getElementById('{!$Component.classicPanel}') != null) {
                     YAHOO.force.com.waitPanel.hide();
                }
                // hide lightning panel  
                else if(document.getElementById('{!$Component.lightningPanel}') != null) {
                    document.getElementById('spinner').className += ' slds-hide';
                }
                
                erroralert("submitRequest():", ex);
                
            } finally {
                if (exception != null) {
                    // back to agreement detail page
                    goBack();
                    
                } 
                
            }
            
        }
        
         /**
         * Callback after the timeout occurred
         */
        function afterTimeout() {
            
            try {
                
                // get the timeout message
                var cMsg = "{!JSENCODE(TimeoutMessage)}";
                var message = "";
                var lines = cMsg.split("\\n");
                for (var i = 0; i < lines.length; i++) {
                    if (i > 0) {
                        message += "\n";
                    }
                    message += lines[i];
                }
                
                // hide modal panel for classic
                if(document.getElementById('{!$Component.classicPanel}') != null) {
                   YAHOO.force.com.waitPanel.hide();
                }
                // hide lightning panel  
                else if(document.getElementById('{!$Component.lightningPanel}') != null) {
                   document.getElementById('spinner').className += ' slds-hide';
                }
                
                // show timeout message
                if (confirm(message)) {
                    // back to agreement detail page
                    goBack();
                    
                }
                
            } catch(ex) {
                erroralert(cERROR_UNKNOWN, ex);
                // back to agreement detail page
                goBack();
                
            } 
            
        }
        
        /**
         * Callback after generate is done
         */
        function afterGenerate() {
            
            // cancel timeout
            cancelTimeout();
            // hide modal panel for classic
            if(document.getElementById('{!$Component.classicPanel}') != null) {
               YAHOO.force.com.waitPanel.hide();
            }
            // hide lightning panel  
            else if(document.getElementById('{!$Component.lightningPanel}') != null) {
               document.getElementById('spinner').className += ' slds-hide';
            }
            
        }
        
        /**
         * Cancel the timeout
         */
        function cancelTimeout() {
        
            if (gTimeoutId != null) {
                clearTimeout(gTimeoutId);
                gTimeoutId = null;
                
            }
            
        }
        
         /**
         * Go back to the detail page
         */
        function goBack() {
            // get the agreement id
            var agreementId = "{!JSENCODE(agreementId)}";
            sforce.connection.sessionId = "{!$Api.Session_ID}"; //to avoid session timeout
            // go back to the detail page
            navigateToRecord(agreementId);
            
        }

        /**
        * Close current tab and open a record in new tab
        */
        function closeTab() {
            //First find the ID of the current tab to close it
            sforce.console.getEnclosingTabId(closeSubtab);
         }

        var closeSubtab = function closeSubtab(result) {
            //Close the tab when returnId is retrived.
            var tabId = result.id;
            sforce.console.closeTab(tabId, callback);
        };

        var callback = function callback(result) {
             if (result.error) {
                alert("Error in closing tab " + result.error);
             } 
        };

        /**
         * method to perform navigation after action is completed
         * 
         */
        function navigateToRecord (returnId) {
            // Check for navigation in Ligtning or Mobile
            if((typeof sforce != 'undefined') && (sforce != null) && (sforce.one) ) {
                // if console application, close the current tab and navigate to object
                if (sforce.console.isInConsole()) {
                     // close tab
                     closeTab();
                     // refresh page to get focus on latest record opened
                     navigateTo("/" + returnId);
                    }
                else 
                   sforce.one.navigateToSObject(returnId); 
            } else {
                   navigateTo("/" + returnId);
              }
         }
    	
	</script>
	
    <apex:form id="submitRequest">
    	
		<!--  required fields -->
		<apex:outputText value="{!Apttus__APTS_Agreement__c.Name}" rendered="false"/>
		<apex:outputText value="{!Apttus__APTS_Agreement__c.Apttus__Version_Number__c}" rendered="false"/>
		<apex:outputText value="{!Apttus__APTS_Agreement__c.Apttus__Status__c}" rendered="false"/>
		<apex:outputText value="{!Apttus__APTS_Agreement__c.Apttus__Status_Category__c}" rendered="false"/>
		<apex:outputText value="{!Apttus__APTS_Agreement__c.Apttus__FF_Agreement_Number__c}" rendered="false"/>
		<apex:outputText value="{!Apttus__APTS_Agreement__c.Apttus__Contract_Start_Date__c}" rendered="false"/>
		<apex:outputText value="{!Apttus__APTS_Agreement__c.Apttus__Contract_End_Date__c}" rendered="false"/>
		<apex:outputText value="{!Apttus__APTS_Agreement__c.Apttus__Agreement_Number__c}" rendered="false"/>
		<apex:outputText value="{!Apttus__APTS_Agreement__c.Apttus__Requestor__c}" rendered="false"/>
		<apex:outputText value="{!Apttus__APTS_Agreement__c.Apttus__Primary_Contact__c}" rendered="false"/>
		<apex:outputText value="{!Apttus__APTS_Agreement__c.OwnerId}" rendered="false"/>
		<apex:outputText value="{!Apttus__APTS_Agreement__c.Apttus__VersionAware__c}" rendered="false" />
		
		<!--  hidden action buttons -->
		<!-- 
		<apex:commandButton id="btnInitProcess" 
							action="{!doInitProcess}" 
							value="Initialize Process" 
							style="display: none" 
							reRender="idOutputPanel" />
		<apex:commandButton id="btnSubmitRequest" 
							action="{!doSubmitRequest}" 
							value="Submit Request" 
							style="display: none" 
							reRender="idOutputPanel" />
		<apex:commandButton id="btnDestroyProcess" 
							action="{!doDestroyProcess}" 
							value="Destroy Process" 
							style="display: none" 
							reRender="dummy"/>
		
		<script>
        	//var btnInitProcess = document.getElementById("{!$Component.btnInitProcess}");
        	//var btnSubmitRequest = document.getElementById("{!$Component.btnSubmitRequest}");
        	//var btnDestroyProcess = document.getElementById("{!$Component.btnDestroyProcess}");
        	
      	</script>
		-->
		<apex:outputPanel id="idSubmitRequestPanel">
			
	    	<apex:pageBlock mode="edit" rendered="{!isInitialized && NOT(canEditAgreement)}" >
				<apex:pageMessages />
				<apex:outputText value="{!$Label.apttus__insufficientprivileges}" 
								 style="font-family: Arial, Helvetica, sans-serif;font-weight: bold;font-size: 12pt;" /><p/>
				<apex:outputText value="{!$Label.apttus__insufficientprivilegesdetail}" /><br/>
				<apex:pageBlockButtons location="bottom" >
					<apex:commandButton action="{!doCancel}" value="{!$Label.apttus__return}" immediate="true" />
				</apex:pageBlockButtons>
				<script>
            // hide modal panel for classic
            if(document.getElementById('{!$Component.classicPanel}') != null) {
               YAHOO.force.com.waitPanel.hide();
            }
            // hide lightning panel  
            else if(document.getElementById('{!$Component.lightningPanel}') != null) {
                document.getElementById('spinner').className += ' slds-hide';
            }
				</script>
			</apex:pageBlock>
				
			<apex:pageBlock mode="edit" rendered="{!canEditAgreement && isErrorPage}" >
				<apex:pageMessages />
				<apex:pageBlockButtons location="bottom" >
					<apex:commandButton action="{!doCancel}" value="{!$Label.apttus__cancel}" immediate="true" />
				</apex:pageBlockButtons>
				<script>
            // hide modal panel for classic
            if(document.getElementById('{!$Component.classicPanel}') != null) {
               YAHOO.force.com.waitPanel.hide();
            }
            // hide lightning panel  
            else if(document.getElementById('{!$Component.lightningPanel}') != null) {
                document.getElementById('spinner').className += ' slds-hide';
            }
				</script>
			</apex:pageBlock>
				
			<apex:outputPanel rendered="{!canEditAgreement && isInitPage}" >
				<script>
            // show modal panel for classic
            if(document.getElementById('{!$Component.classicPanel}') != null) {
               YAHOO.force.com.waitPanel.show();
            }
            // show lightning panel  
            else if(document.getElementById('{!$Component.lightningPanel}') != null) {
               document.getElementById('spinner').className += ' slds-show';
            }
	    			// init process
					//btnInitProcess.click();
					doInitProcess();
				</script>
			</apex:outputPanel>
			
			<apex:outputPanel rendered="{!canEditAgreement && isPrepareRequestPage}" >
				<script>
            // show modal panel for classic
            if(document.getElementById('{!$Component.classicPanel}') != null) {
               YAHOO.force.com.waitPanel.show();
            }
            // show lightning panel  
            else if(document.getElementById('{!$Component.lightningPanel}') != null) {
               document.getElementById('spinner').className += ' slds-show';
            }
	    			// prepare request
					doPrepareRequest();
				</script>
			</apex:outputPanel>
			
			<apex:outputPanel rendered="{!canEditAgreement && isSubmitRequestPage}" >
				<script>
            // show modal panel for classic
            if(document.getElementById('{!$Component.classicPanel}') != null) {
               YAHOO.force.com.waitPanel.show();
            }
            // show lightning panel  
            else if(document.getElementById('{!$Component.lightningPanel}') != null) {
               document.getElementById('spinner').className += ' slds-show';
            }
	    			// submit request
					//btnSubmitRequest.click();
					doSubmitRequestJS();
				</script>
			</apex:outputPanel>
		
			<apex:outputPanel rendered="{!canEditAgreement && isConfirmationPage}" >
				<script>
					// get the agreement id
					var agreementId = "{!JSENCODE(agreementId)}";
					
					try {
						sforce.connection.sessionId = "{!$Api.Session_ID}"; //to avoid session timeout
                // hide modal panel for classic
                if(document.getElementById('{!$Component.classicPanel}') != null) {
                   YAHOO.force.com.waitPanel.hide();
                }
                // hide lightning panel  
                else if(document.getElementById('{!$Component.lightningPanel}') != null) {
                    document.getElementById('spinner').className += ' slds-hide';
                }
	    				// destroy process
						//btnDestroyProcess.click();
						doDestroyProcess();
						// get the confirmation message
						var cMsg = "{!JSENCODE(confirmationMessage)}";
						var message = "";
						var lines = cMsg.split("\\n");
						for (var i = 0; i < lines.length; i++) {
							if (i > 0) {
								message += "\n";
								
							}
							message += lines[i];
							
						}
						
						// show confirmation message
						alert(message);
						
					} catch(ex) {
						erroralert(cERROR_UNKNOWN, ex);
						
					} finally {
						// back to the detail page
						navigateToRecord(agreementId);
						
					}
					
				</script>
			</apex:outputPanel>
				
		</apex:outputPanel>
		
		<apex:actionFunction name="doInit" 
    						 action="{!doInit}" 
    						 reRender="idSubmitRequestPanel" /> 
    						 
    	<apex:actionFunction name="doInitProcess" 
    						 action="{!doInitProcess}" 
    						 reRender="idSubmitRequestPanel" /> 
    	
    	<apex:actionFunction name="doPrepareRequest" 
    						 action="{!doPrepareRequest}" 
    						 reRender="idSubmitRequestPanel" /> 
    						 
    	<apex:actionFunction name="doSubmitRequest" 
    						 action="{!doSubmitRequest}" 
    						 reRender="idSubmitRequestPanel" oncomplete="afterGenerate()" timeout="{!CallTimeoutMillis}"/> 
    						 
    	<apex:actionFunction name="doDestroyProcess" 
    						 action="{!doDestroyProcess}" 
    						 reRender="dummy" /> 
    						 					 					 
	</apex:form>
	
</apex:page>