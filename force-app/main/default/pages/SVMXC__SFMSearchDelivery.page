<apex:page title="Search Delivery" standardStylesheets="false" controller="SVMXC.SFMSearchDelivery">
<apex:includeScript value="/support/console/29.0/integration.js"/>
<script>

    //Remove the inline=1 from url while loading the page based on the showHeader attribute. This is done to display the 
    //header while rendering the page.
    //Jaysukh ; BAC - 3517 - Redirect to self based on assiged URL paramater.
     window.open('{!urlPath}', '_self');
     
    //Below code commented as a part of story BAC - 3517 
    
    /* 
    var url = '{!JSINHTMLENCODE($CurrentPage.URL)}';
    var match = url.match(/showHeader=true/);
    if(match != null) {
        match = url.match(/inline=1/);
        if (match != null) { 
           var newUrl = url.replace(/inline=1/, '');
           //window.top.location = newUrl;
           window.open(newUrl, '_self');
       }
    }*/
    
    function processResourceURL(url){
        var ret = url, index;
        if((index = url.indexOf("?")) != -1){
            ret = url.substring(0, index);
        }
        return ret;
    }
    
    // TODO: Read from settings
    var __SVMX_LOAD_VERSION__ = "micro";
    var __SVMX_CLIENT_LIB_PATH__ = processResourceURL("{!URLFOR($Resource.com_servicemax_client_lib, 'com.servicemax.client.lib')}");
    var svmx_display_tags = {
        SFMSEARCH: {
            "TAG0002"         : "{!HTMLENCODE($Label.SFM003_TAG002)}",
            "TAG0003"         : "{!HTMLENCODE($Label.SFM003_TAG003)}",
            "TAG0004"         : "{!HTMLENCODE($Label.SFM003_TAG004)}",
            "TAG0005"         : "{!HTMLENCODE($Label.SFM003_TAG005)}",
            "TAG0006"         : "{!HTMLENCODE($Label.SFM003_TAG006)}",
            "TAG0007"         : "{!HTMLENCODE($Label.SFM003_TAG007)}",
            "TAG0008"         : "{!HTMLENCODE($Label.SFM003_TAG008)}",
            "TAG0009"         : "{!HTMLENCODE($Label.SFM003_TAG009)}",
            "COMM001_TAG012" : "{!HTMLENCODE($Label.COMM001_TAG012)}",
            "COMM001_TAG013" : "{!HTMLENCODE($Label.COMM001_TAG013)}",
            "COMM001_TAG014" : "{!HTMLENCODE($Label.COMM001_TAG014)}",
            "COMM001_TAG015" : "{!HTMLENCODE($Label.COMM001_TAG015)}",
            "COMM001_TAG031" : "{!HTMLENCODE($Label.COMM001_TAG031)}",
            "SFW_TITLE"      : "{!HTMLENCODE($Label.CONF005_TEXT73)}",
            "SFW_AVLBL_SRCH" : "{!HTMLENCODE($Label.CONF031_TAG024)}",
            "SFW_YES_BTN"    : "{!HTMLENCODE($Label.COMM001_TAG119)}",
            "SFW_NO_BTN"     : "{!HTMLENCODE($Label.COMM001_TAG120)}",
            "CONF016_TAG113" : "{!HTMLENCODE($Label.CONF016_TAG113)}",
            "CONF016_TAG114" : "{!HTMLENCODE($Label.CONF016_TAG114)}",
            "CONF016_TAG032" : "{!HTMLENCODE($Label.CONF016_TAG032)}",
            "CONF016_TAG115" : "{!HTMLENCODE($Label.CONF016_TAG115)}",
            "TAG0010"        : "{!HTMLENCODE($Label.SFM002_TAG088)}" 
        } 
    };
    
    var SVMXJsr = {
        
        JsrGetSearchInfo : function(request, callback, context){
            var requestStr = SVMX.toJSON(request), me = this;
            Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.SFMSearchDelivery.JsrGetSearchInfo}', requestStr, 
                function(result, event){ me.processResult(result, event, callback, context); }, {escape: false}
            );
        },
        
        JsrGetSearchResult : function(request, callback, context){
            var requestStr = SVMX.toJSON(request), me = this;
            Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.SFMSearchDelivery.JsrGetSearchResult}', requestStr, 
                function(result, event){ me.processResult(result, event, callback, context); }, {escape: false}
            );
        },
        
        JsrGetDisplayTags : function(request, callback, context){
            var me = this;
            
            setTimeout(function(){
                me.processResult(svmx_display_tags.SFMSEARCH, {status : true}, callback, context);
            }, 1);
        },
        
        JsrGetWizardInfo : function(request, callback, context){
            var requestStr = SVMX.toJSON(request), me = this;
            Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.SFMSearchDelivery.JsrGetWizardInfo}', requestStr, 
                function(result, event){ me.processResult(result, event, callback, context); }, {escape: false}
            );
        },
         
        processResult : function(result, event, callback, context){
            var ret = {success : false};
            if(event.status == true){
                ret = SVMX.toObject(result);
            }
            callback.call(context, ret, event);
        }
   };
   
   var svmx_sfmsearch_delivery_search_info = "{!JSENCODE(SearchInfo)}";
   var svmx_sfmsearch_delivery_userinfo = "{!JSENCODE(UserInfo)}"; //Added for the story BAC-4063
</script>

<script type="text/javascript" src="{!IF($CurrentPage.parameters.debug != null,
URLFOR($Resource.com_servicemax_client_sfmsearchdelivery_es6, 'com.servicemax.client.sfmsearchdelivery.es6/bundle.js'),
URLFOR($Resource.com_servicemax_client_sfmsearchdelivery_es6, 'com.servicemax.client.sfmsearchdelivery.es6/bundle.min.js')
)}"></script>

<script>

jQuery(document).ready(function(){
    
    var ui_components               = processResourceURL("{!URLFOR($Resource.com_servicemax_client_ui_components_resource , '')}");
    var ui_desktop_theme            = processResourceURL("{!URLFOR($Resource.com_servicemax_client_sfmdelivery_ui_desktop_theme_resource, '')}");
    

    var config = {title : "{!HTMLENCODE($Label.CONF005_TEXT73)}", version : "1.0.0",
    
        "app-config" : {
            "org-name-space": "SVMXC",
            "application-id"   : "console",
            "sfmconsole-runtime-mode" : "standalone",
            "sfmconsole-skip-sync": true,
            "svmx-api-version" : "9.0",
            "sal-service-runtime-mode" : "VISUAL_FORCE",
            "enable-cache" : true,
            "enable-log" : true,
            "svmx-sfm-sal-model-use-jsr" : true,
            "svmx-base-url" : "{!$Site.Prefix}",
            "ui-component-resourcepath": ui_components,
            "ui-desktop-theme-resourcepath" : ui_desktop_theme,            
        },
    
        "platform-config" : {
    
        }
    };
    
    //If the delivery is running in the Salesforce lightning mode, then loading the ServiceMax Lightning theme
    if (typeof sforce.one !== 'undefined'){
        config["app-config"]["theme"] = 'LIGHTNING';
    }
    
    var appConfig = config['app-config'];  
        
    Object.keys(appConfig).forEach(function(key){
          SVMX.getClient().addApplicationParameter(key, appConfig[key]);
    });


    // set up the session id
    SVMX.getClient().addApplicationParameter("session-id", "{!GETSESSIONID()}");
    
    var extPath = processResourceURL("{!URLFOR($Resource.com_servicemax_client_ui_ext4loader , 'com.servicemax.client.ui.ext4loader/src/extjs/ext-all.js')}");
   
    SVMX.requireScript(extPath, function() {
    Ext.onReady( function() {
         console.log("ext loaded " + Date());
         startApplication();
         console.log("javascript resource loaded " + Date());    
        
     });
    }, null, this, { ignoreLoadVersion: true });
    
    ///////////////////////////// start - handling of hide/show for the SFDC sidebar /////////////////////
    /**
     * @ Indresh M S
     * The life cycle of the 'client_display_root' div is maintained by ExtJs. And because of that,
     * whenever SFDC triggers a page layout change, ExtJs does not react to it. It has to be explicitly
     * told to re-layout.
     * In order to achieve that, we will have to fall back on the elements  from SFDC that are involved
     * in the layout change.
     * !!! WARNING: It is possible that SFDC may adjust id's of the elements refered to below. Make sure that this
     * feature continues to run by testing against every SFDC upgrade.
     */
    $("#handlebarContainer").click(function(evt){
        resize();
    });
       
    var panelTimer;

    function checkForPanel() {
        panelTimer = setTimeout(function(){
            try { 
                var engine = SVMX.getCurrentApplication().defaultSearchInstance;
                if (engine.getRoot()) {
                    clearTimeout(panelTimer);
                    engine.__isContainerExternal = true;
                    engine.__parent = {
                        heightOffset: $("#AppBodyHeader").height() + 10,
                        widthOffset: $("#sidebarCell").width() + 60
                    }                
                    resize();
                } else {
                    clearTimeout(panelTimer);
                    checkForPanel();    
                }
            } catch(e) {
                clearTimeout(panelTimer);
                checkForPanel();
            }    
        }, 200);
    };
                             
    function resize(){
        setTimeout(function(){
            var w = Math.max(document.documentElement.clientWidth, window.innerWidth || 0)
            var h = Math.max(document.documentElement.clientHeight, window.innerHeight || 0)
            var heightOffset = $("#AppBodyHeader").height() + 10;
            var widthOffset = $("#sidebarCell").width() + 40;
            
            $("#client_display_root")
            .width($("#AppBodyHeader").width() - widthOffset)
            .height(h - heightOffset);
            
            try { 
                var engine = SVMX.getCurrentApplication().defaultSearchInstance;
                engine.__parent = {
                    heightOffset: heightOffset,
                    widthOffset: widthOffset + 20
                } 
                
                engine.onResize(
                    { width : $("#client_display_root").width(), 
                      height : $("#client_display_root").height()
                    }
                );
                SVMX.getCurrentApplication().defaultSearchInstance.getRoot().doLayout(); 
             } catch(e){}
        }, 5);
    }
    checkForPanel();
    ///////////////////////////// end - handling of hide/show for the SFDC sidebar //////////////////////
});

</script>
<body>
<div id="client_display_root"></div>
</body>
</apex:page>