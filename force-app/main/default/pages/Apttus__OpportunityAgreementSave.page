<!-- 
    Apttus Contract Management
    OpportunityAgreementSave
     
    @2009-2019 Apttus Inc. All rights reserved.

 -->
<apex:page standardController="Apttus__APTS_Agreement__c" 
		   extensions="Apttus.QueryParamController"  
		   showHeader="true">
		   
	<script type="text/javascript" src="/soap/ajax/30.0/connection.js"></script>
	<script type="text/javascript" src="/soap/ajax/30.0/apex.js"></script>
	<apex:include pageName="Apttus__ComplyJSLibInclude" />
	
	<apex:stylesheet value="{!URLFOR($Resource.Apttus__YUILibrary, '/yui/build/assets/skins/sam/skin.css')}" />
 
	<apex:includescript value="{!URLFOR($Resource.Apttus__YUILibrary, '/yui/build/yahoo-dom-event/yahoo-dom-event.js')}" />
	<apex:includescript value="{!URLFOR($Resource.Apttus__YUILibrary, '/yui/build/dragdrop/dragdrop-min.js')}" />
	<apex:includescript value="{!URLFOR($Resource.Apttus__YUILibrary, '/yui/build/container/container-min.js')}" />
	<apex:includescript value="{!URLFOR($Resource.Apttus__YUILibrary, '/yui/build/animation/animation-min.js')}" />
    <apex:includeScript value="/support/console/45.0/integration.js"/>
	
  <apex:outputPanel rendered="{!!($User.UIThemeDisplayed == 'Theme4d' || $User.UIThemeDisplayed == 'Theme4t' || $User.UIThemeDisplayed == 'Theme4u')}">
	<script>
    
	    // Create a namespace for our custom functions
	    YAHOO.namespace("force.com");
		
		// wait panel
		
		/**
		 * Builds the wait panel.
		 */
	    YAHOO.force.com.buildWaitPanel = function() {
	        document.body.className = document.body.className + " yui-skin-sam";
	        YAHOO.force.com.waitPanel = new YAHOO.widget.Panel(
	            "waitPanel",  // The id of our dialog container
	            { 
	                    width           :   "300px", // You can play with this until it's right
	                    visible         :   false,   // Should be invisible when rendered
	                    draggable       :   false,   // Make the dialog draggable
	                    close           :   false,   // Don't include a close title button
	                    modal           :   true,    // Make it modal
	                    fixedCenter     :   true,    // Keep centered if window is scrolled
	                    zindex          :   40,      // Make sure it's on top of everything
	                    constraintoviewport: true,
	                    
	                    // This line adds the appear/disapper fade effect
	                    effect			:   {effect:YAHOO.widget.ContainerEffect.FADE,duration:0.25}
        							
	            }
	        );
	        
	        // header
	        YAHOO.force.com.waitPanel.setHeader("{!JSINHTMLENCODE($Label.LoadingPage)}");
			// set image
			YAHOO.force.com.waitPanel.setBody('<center><img src="{!URLFOR($Resource.Image_LoadingPage)}" /></center>');
	        // Render the dialog to the document.body level of the DOM
	        YAHOO.force.com.waitPanel.render(document.body);
	        
	    }
	    
	    // Function called when the DOM is ready to create the dialog,
    	// render the dialog into the document body, add our dialog skin
    	// css to the body tag, and wire up the buttons on our dialog   
		YAHOO.force.com.onDOMReady = function() {
			
			// build the wait panel
			YAHOO.force.com.buildWaitPanel();
			// show modal panel
			YAHOO.force.com.waitPanel.show();
			// post save
			// delay to display progress message	
           	setTimeout(function() {
           		// post save
         		afterSave();
          	}, 2000);
	        
		}
		
	    // build the panel as soon as the DOM is in a usable state
		YAHOO.util.Event.onDOMReady(YAHOO.force.com.onDOMReady);   	
		
	</script>
  </apex:outputPanel>
  <apex:outputPanel rendered="{!($User.UIThemeDisplayed == 'Theme4d' || $User.UIThemeDisplayed == 'Theme4t' || $User.UIThemeDisplayed == 'Theme4u')}">
    <script>
        // post save
            // delay to display progress message    
            setTimeout(function() {
                // post save
                afterSave();
            }, 2000);
    </script>
    <apex:slds />
    <div class="slds-scope">    
    <!-- SPINNER -->
         <div id="spinner" class="slds-spinner_container" >
              <div role="status" class="slds-spinner slds-spinner--large slds-spinner--brand">
                   <div class="slds-spinner__dot-a"></div>
                   <div class="slds-spinner__dot-b"></div>
              </div>
         </div>
    <!-- / SPINNER -->    
    </div>
  </apex:outputPanel>
	
	<script type="text/javascript">
    
	   	/**
		 * Initializes the call
		 */
		function initCall() {
		
			try {
				sforce.connection.sessionId = "{!$Api.Session_ID}"; //to avoid session timeout
			} catch(e) {
				erroralert(cERROR_UNKNOWN,e);
				
			}
		
		}

		/**
		* Close current tab and open a record in new tab
		*/
		function closeTab() {
			//First find the ID of the current tab to close it
			sforce.console.getEnclosingTabId(closeSubtab);
		}

		var closeSubtab = function closeSubtab(result) {
			//Close the tab when returnId is retrived.
			var tabId = result.id;
			sforce.console.closeTab(tabId, callback);
		};

		var callback = function callback(result) {
			if (result.error) {
			alert("Error in closing tab " + result.error);
			}
		};

 	    /**
		 * method to perform navigation after action is completed
         * 
		 */
		function navigateUrl (returnId) {
            // Check for navigation in Ligtning or Mobile
            if((typeof sforce != 'undefined') && (sforce != null) && (sforce.one) ) {
                // if console application, close the current tab and navigate to object
                if (sforce.console.isInConsole()) {
                	 // close tab
                     closeTab();
                     // refresh page to get focus on latest record opened
                     navigateTo("/" + returnId);
                    }
                else 
                   sforce.one.navigateToSObject(returnId); 
            } else {
                   navigateTo("/" + returnId);
              }
		 }
    
	    /**
		 * Callback invoked after the created agreement is saved
		 */
		function afterSave() {
			
			// get parameters
			// created agreement id
			var agreementId = "{!JSENCODE(agreementId)}";
			
			try {
				// STEP I - initialize the call
				initCall();
				// STEP II - perform after create tasks
				afterCreateFromOpportunity(agreementId);
				
			} catch(ex) {
				// hide modal panel
				YAHOO.force.com.waitPanel.hide();
				// display the error
				erroralert(cERROR_UNKNOWN, ex);
				
			} finally {
				// open the agreement in view mode
				navigateUrl(agreementId);
				
			}
		
		}
	
    </script>
	
</apex:page>