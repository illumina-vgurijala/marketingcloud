<apex:page title="Trigger Setting" standardStylesheets="true" showHeader="true" sidebar="true" controller="SVMXC.CONF_TriggerSetting">
    <script>
      var __SVMX_LOAD_VERSION__  = "micro";
      var __SVMX_CLIENT_LIB_PATH__ = "{!URLFOR($Resource.com_servicemax_client_lib, 'com.servicemax.client.lib')}";  
    </script>
  
    <script>
        function processResourceURL(url) {      
            var ret = url, index;
            if((index = url.indexOf("?")) != -1){
                ret = url.substring(0, index);
            } 
            return ret;
        }   
        
        var userlocale = '{!$User.title}';
        
        var svmx_display_tags = {
            TRIGGERSETTING: {
                "TAG001"         : "{!HTMLENCODE($Label.CONF043_TAG001)}", // Trigger Setting
                "TAG002"         : "{!HTMLENCODE($Label.CONF043_TAG002)}", // Back to Setup Home
                "TAG003"         : "{!HTMLENCODE($Label.CONF043_TAG003)}", // Select Object
                "TAG004"         : "{!HTMLENCODE($Label.CONF043_TAG004)}", // Save
                "TAG005"         : "{!HTMLENCODE($Label.CONF043_TAG005)}", // Cancel
                "TAG006"         : "{!HTMLENCODE($Label.CONF043_TAG006)}", // Trigger Name
                "TAG007"         : "{!HTMLENCODE($Label.CONF043_TAG007)}", // Enable/Disable
                "TAG008"         : "{!HTMLENCODE($Label.CONF043_TAG008)}", // Enable/ Disable Trigger
                "TAG009"         : "{!HTMLENCODE($Label.CONF043_TAG011)}", // Note on Page
                "TAG010"         : "{!HTMLENCODE($Label.CONF043_TAG012)}", // Link to document
                "TAG013"         : "{!HTMLENCODE($Label.CONF043_TAG013)}",
                "TAG014"         : "{!HTMLENCODE($Label.CONF043_TAG014)}",
                "TAG015"         : "{!HTMLENCODE($Label.CONF043_TAG015)}",
            } 
        };
        
        
        var SVMXJsr = {
            JsrGetObjectName: function(request, callback, context) {    
                var requestStr = SVMX.toJSON(request), me = this;
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.CONF_TriggerSetting.getObjectName}', requestStr,
                    function(result, event){ me.processResult(result, event, callback, context); }, {escape: false}
                );
            },
            
            
            JsrGetObjectTrigger : function(request, callback, context) {    
                var requestStr = SVMX.toJSON(request), me = this;
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.CONF_TriggerSetting.getObjectTrigger}', requestStr,
                    function(result, event){ me.processResult(result, event, callback, context); }, {escape: false}
                );
            },
            
            
            JsrSaveTriggerSetting: function(request, callback, context) {    
                var requestStr = SVMX.toJSON(request), me = this;
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.CONF_TriggerSetting.saveTriggerSetting}', requestStr,
                    function(result, event){ me.processResult(result, event, callback, context); }, {escape: false}
                );
            },
            
             processResult : function(result, event, callback, context) {     
                var ret = {success : false};
                if(event.status == true) {
                    ret = SVMX.toObject(result);
                }
                callback.call(context, ret, event);
            },
        };  
          
    </script>
    
    <script type='text/javascript' src="{!URLFOR($Resource.com_servicemax_client_lib, 'com.servicemax.client.lib/src/bootstrap.js')}"/>
    
    <script>
    jQuery(document).ready(function() {
    
        var client_runtime                = "{!URLFOR($Resource.com_servicemax_client_runtime, '')}";
        var client_mvc                    = "{!URLFOR($Resource.com_servicemax_client_mvc, '')}";
        var client_components             = "{!URLFOR($Resource.com_servicemax_client_ui_components, '')}";
        var client_sfmconsole             = "{!URLFOR($Resource.com_servicemax_client_sfmconsole, '')}";
        var ui_components_bubble          = "{!URLFOR($Resource.com_servicemax_client_ui_components_bubble, '')}";
        var client_themes                 = "{!URLFOR($Resource.com_servicemax_client_ui_themes, '')}";
        var client_themes2                = "{!URLFOR($Resource.com_servicemax_client_ui_themes2, '')}";
       
        var client_sal                    = processResourceURL("{!URLFOR($Resource.com_servicemax_client_sal, '')}");
        var client_sal_model              = processResourceURL("{!URLFOR($Resource.com_servicemax_client_sal_model, '')}");
        var client_sal_sfmconsole_model   = "{!URLFOR($Resource.com_servicemax_client_sal_sfmconsole_model, '')}";
        var sfmconsole_ui_web             = "{!URLFOR($Resource.com_servicemax_client_sfmconsole_ui_web, '')}";
        
        var ui_themes_orange              = "{!URLFOR($Resource.com_servicemax_client_ui_desktop_themes_orange, '')}";
        
        var client_triggersetting                    = "{!URLFOR($Resource.com_servicemax_client_triggersetting, '')}";
        var client_triggersetting_model              = "{!URLFOR($Resource.com_servicemax_client_sal_triggersetting_model, '')}";
        var client_triggersetting_desktop            = "{!URLFOR($Resource.com_servicemax_client_triggersetting_ui_desktop, '')}";  
        
        var config = {title:"Trigger Setting", version:"1.0.0",
            modules:[
                { id : "com.servicemax.client.runtime",                 version : "1.0.0",  codebase : client_runtime},
                { id : "com.servicemax.client.mvc",                     version : "1.0.0" , codebase : client_mvc },
                { id : "com.servicemax.client.ui.components",           version : "1.0.0" , codebase : client_components },
                { id : "com.servicemax.client.sfmconsole",              version : "1.0.0" , codebase : client_sfmconsole},
               
                { id : "com.servicemax.client.sal",                     version : "1.0.0" , codebase : client_sal },
             
                { id : "com.servicemax.client.sal.sfmconsole.model",    version : "1.0.0" , codebase : client_sal_sfmconsole_model},
                { id : "com.servicemax.client.ui.components.bubble",    version : "1.0.0" , codebase : ui_components_bubble },
                { id : "com.servicemax.client.ui.themes",               version : "1.0.0" , codebase : client_themes },
                { id : "com.servicemax.client.ui.themes2",              version : "1.0.0" , codebase : client_themes2 },
                { id : "com.servicemax.client.sfmconsole.ui.web",       version : "1.0.0" , codebase : sfmconsole_ui_web },
    
                { id : "com.servicemax.client.sal.triggersetting.model",   version : "1.0.0" , codebase : client_triggersetting_model },
                { id : "com.servicemax.client.triggersetting",                  version : "1.0.0" , codebase : client_triggersetting },
                { id : "com.servicemax.client.triggersetting.ui.desktop",       version : "1.0.0" , codebase : client_triggersetting_desktop },
                { id : "com.servicemax.client.ui.desktop.themes.orange",version : "1.0.0" , codebase : ui_themes_orange }
            ],
            
            "app-config" : {
                "application-id" : "console",
                "theme" : "ORANGE",
                "sal-service-runtime-mode" : "VISUAL_FORCE",
                "org-name-space": "SVMXC",
                "enable-cache"      : false,
                "enable-log"        : true,
                "svmx-sfm-sal-model-use-jsr" : true
            },
            
            "platform-config" : {}
        }
        
        var client = new com.servicemax.client.lib.core.Client();
    
        client.addApplicationParameter("session-id", "{!GETSESSIONID()}");
        client.run({configType : "local", data : config, loadVersion : __SVMX_LOAD_VERSION__ });
        
        
    });
    </script>
    
    <body>
        <div id="client_display_root"></div>
    </body>

</apex:page>