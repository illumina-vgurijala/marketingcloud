<apex:page title="PM Plan" standardStylesheets="true" showHeader="true" sidebar="true" controller="SVMXC.PREV_SetupPMPlan">
    
    
    <script>
      var __SVMX_LOAD_VERSION__  = "micro";
      var __SVMX_CLIENT_LIB_PATH__ = "{!URLFOR($Resource.com_servicemax_client_lib, 'com.servicemax.client.lib')}";  
      Visualforce.remoting.timeout = 120000;
    </script>
  
    <script>
        
        function processResourceURL(url) {      
            var ret = url, index;
            if((index = url.indexOf("?")) != -1){
                ret = url.substring(0, index);
            } 
            return ret;
        }   
        
        var userlocale = '{!$User.title}';
        
        var svmx_display_tags = {
            PMPLAN: {
                "TAG000"         : "{!$Label.PREV002_HLPURL}", // Help URL 
                "TAG001"         : "{!HTMLENCODE($Label.PREV005_TAG001)}", // New Preventive 
                "TAG002"         : "{!HTMLENCODE($Label.PREV005_TAG002)}", // Back to Service Contract
                "TAG003"         : "{!HTMLENCODE($Label.PREV005_TAG003)}", // Plan Name
                "TAG004"         : "{!HTMLENCODE($Label.PREV005_TAG004)}", // Plan Template
                "TAG005"         : "{!HTMLENCODE($Label.PREV005_TAG005)}", // Service/Maintenance Contarct
                "TAG006"         : "{!HTMLENCODE($Label.PREV005_TAG006)}", // Coverage Type
                "TAG007"         : "{!HTMLENCODE($Label.PREV005_TAG007)}", // Schedule Type
                "TAG008"         : "{!HTMLENCODE($Label.PREV005_TAG008)}", // Account
                "TAG009"         : "{!HTMLENCODE($Label.PREV005_TAG009)}", // SLA Terms
                "TAG010"         : "{!HTMLENCODE($Label.PREV005_TAG010)}", // Start Date
                "TAG011"         : "{!HTMLENCODE($Label.PREV005_TAG011)}", // End Date
                "TAG012"         : "{!HTMLENCODE($Label.PREV005_TAG012)}", // Activity Date
                "TAG013"         : "{!HTMLENCODE($Label.PREV005_TAG013)}", // Work Order Purpose
                "TAG014"         : "{!HTMLENCODE($Label.PREV005_TAG014)}", // Description
                "TAG015"         : "{!HTMLENCODE($Label.PREV005_TAG015)}", // No Coverages to display
                "TAG016"         : "{!HTMLENCODE($Label.PREV005_TAG016)}", // Coverages
                "TAG017"         : "{!HTMLENCODE($Label.PREV005_TAG017)}", // Remove Coverage
                "TAG018"         : "{!HTMLENCODE($Label.PREV005_TAG018)}", // Add Covergaes
                "TAG019"         : "{!HTMLENCODE($Label.PREV005_TAG019)}", // Enter PM Plan Name
                "TAG020"         : "{!HTMLENCODE($Label.PREV005_TAG020)}", // Enter End Date
                "TAG021"         : "{!HTMLENCODE($Label.PREV005_TAG021)}", // Enter Start Date
                "TAG022"         : "{!HTMLENCODE($Label.COMM001_TAG040)}", // Cancel
                "TAG023"         : "{!HTMLENCODE($Label.COMM001_TAG039)}", // Save
                "TAG024"         : "{!HTMLENCODE($Label.PREV005_TAG022)}", // No matches found. Refine your search.
                "TAG025"         : "{!HTMLENCODE($Label.PREV005_TAG023)}", // You must enter more than 3 characters to perform search
                "TAG026"         : "{!HTMLENCODE($Label.PREV005_TAG024)}", // Are you sure you want to delete coverage?
                "TAG027"         : "{!HTMLENCODE($Label.PREV005_TAG025)}", // Are you sure you want to delete the coverages and schedules?
                "TAG028"         : "{!HTMLENCODE($Label.PREV005_TAG026)}", // All unprocessed schedules will be lost or reset. Are you sure you want to regenerate schedules?
                "TAG029"         : "{!HTMLENCODE($Label.PREV005_TAG027)}", // Location
                "TAG030"         : "{!HTMLENCODE($Label.PREV005_TAG028)}", // Advanced Expression
                "TAG031"         : "{!HTMLENCODE($Label.PREV005_TAG029)}", // There is a mismatch between the product and attribute chosen. Please choose the correct attribute and save.
                "TAG032"         : "{!HTMLENCODE($Label.PREV005_TAG030)}", // There is a mismatch between the product and attribute chosen. Please choose the correct attribute and save.
                "TAG033"         : "{!HTMLENCODE($Label.PREV005_TAG031)}", // One or more conditions is invalid. Please review the conditions and save
                "TAG034"         : "{!HTMLENCODE($Label.PREV005_TAG032)}", // Every
                "TAG035"         : "{!HTMLENCODE($Label.PREV005_TAG033)}", // Every decrement
                "COMM_TAG004"    : "{!HTMLENCODE($Label.COMM002_TAG005)}", // None
                "TAG036"         : "{!HTMLENCODE($Label.PREV005_TAG034)}", // Actual
                "TAG037"         : "{!HTMLENCODE($Label.PREV005_TAG035)}", // Fixed
                "TAG038"         : "{!HTMLENCODE($Label.PREV005_TAG036)}", // Days
                "TAG039"         : "{!HTMLENCODE($Label.PREV005_TAG037)}", // Count
                "TAG040"         : "{!HTMLENCODE($Label.PREV005_TAG038)}", // This is a required field
                "TAG041"         : "{!HTMLENCODE($Label.PREV005_TAG039)}", // Stop At cannot be less than Start At
                "TAG042"         : "{!HTMLENCODE($Label.PREV005_TAG040)}", // This row has one or more issues. Please correct before proceeding
                "TAG043"         : "{!HTMLENCODE($Label.PREV005_TAG041)}", // Delete
                "TAG044"         : "{!HTMLENCODE($Label.PREV005_TAG042)}", // Sequence
                "TAG045"         : "{!HTMLENCODE($Label.PREV005_TAG043)}", // Field
                "TAG046"         : "{!HTMLENCODE($Label.PREV005_TAG044)}", // Operator
                "TAG047"         : "{!HTMLENCODE($Label.PREV005_TAG045)}", // Frequency
                "TAG048"         : "{!HTMLENCODE($Label.PREV005_TAG046)}", // Start At
                "TAG049"         : "{!HTMLENCODE($Label.PREV005_TAG047)}", // Threshold %
                "TAG050"         : "{!HTMLENCODE($Label.PREV005_TAG048)}", // Stop At
                "TAG051"         : "{!HTMLENCODE($Label.PREV005_TAG049)}", // Adjustment Type
                "TAG052"         : "{!HTMLENCODE($Label.PREV005_TAG050)}", // Minimum Adjustment
                "TAG053"         : "{!HTMLENCODE($Label.PREV005_TAG051)}", // Maximum Adjustment
                "TAG054"         : "{!HTMLENCODE($Label.PREV005_TAG052)}", // Adjustment Value
                "TAG055"         : "{!HTMLENCODE($Label.PREV005_TAG053)}", // Adjustment Unit
                "TAG056"         : "{!HTMLENCODE($Label.PREV005_TAG054)}", // Add Row
                "TAG057"         : "{!HTMLENCODE($Label.PREV005_TAG055)}", // No Schedules to display
                "TAG058"         : "{!HTMLENCODE($Label.PREV005_TAG056)}", // Sequence
                "TAG059"         : "{!HTMLENCODE($Label.PREV005_TAG057)}", // PM Schedule Output
                "TAG060"         : "{!HTMLENCODE($Label.PREV005_TAG058)}", // Status
                "TAG061"         : "{!HTMLENCODE($Label.PREV005_TAG059)}", // Actual Output
                "TAG062"         : "{!HTMLENCODE($Label.PREV005_TAG060)}", // Work Order Purpose
                "TAG063"         : "{!HTMLENCODE($Label.PREV005_TAG061)}", // Changing this will regenerate all unprocessed schedules for this Preventive maintenance plan. Do you want to continue?
                "TAG064"         : "{!HTMLENCODE($Label.PREV005_TAG062)}", // Condition Rules:
                "TAG065"         : "{!HTMLENCODE($Label.PREV005_TAG063)}", // If you have defined new conditions or changed existing ones, please click "Run schedule" to regenerate schedules for the updated conditions.
                "TAG066"         : "{!HTMLENCODE($Label.PREV005_TAG064)}", // Scheduled Output:
                "TAG067"         : "{!HTMLENCODE($Label.PREV005_TAG065)}", // Run Schedule
                "TAG068"         : "{!HTMLENCODE($Label.PREV005_TAG066)}", // Back to Account
                "TAG069"         : "{!HTMLENCODE($Label.PREV005_TAG067)}", // Back to Location
                "TAG070"         : "{!HTMLENCODE($Label.PREV005_TAG068)}", // Back to Installed Product
                "TAG071"         : "{!HTMLENCODE($Label.PREV005_TAG069)}", // Please add condition to newly added coverage as it's product is different from PM template product.
                "TAG072"         : "{!HTMLENCODE($Label.PREV005_TAG070)}", // Add conditions to save the coverage.
                "TAG073"         : "{!HTMLENCODE($Label.PREV005_TAG071)}", // Value
                "TAG074"         : "{!HTMLENCODE($Label.PREV005_TAG072)}", // Condition Type
                "TAG075"         : "{!HTMLENCODE($Label.PREV005_TAG073)}", // Attribute
                "TAG076"         : "{!HTMLENCODE($Label.PREV005_TAG074)}", // Please fill values for the following columns in Condition Rule : Attribute, Operator and Value
                "TAG077"         : "{!HTMLENCODE($Label.PREV005_TAG075)}", // Usage/Frequency Based
                "TAG078"         : "{!HTMLENCODE($Label.PREV005_TAG076)}", // Criteria/Comparison Based
                "COMM_TAG006"    : "{!HTMLENCODE($Label.COMM002_TAG006)}", // Equals
                "COMM_TAG008"    : "{!HTMLENCODE($Label.COMM002_TAG008)}", // Greater Than
                "COMM_TAG010"    : "{!HTMLENCODE($Label.COMM002_TAG010)}", // Less Than
                "TAG079"         : "{!HTMLENCODE($Label.COMM001_TAG149)}",// Enter valid Date
                "TAG080"         : "{!HTMLENCODE($Label.COMM001_TAG150)}", // Enter valid Number
                "TAG081"         : "{!HTMLENCODE($Label.PREV005_TAG077)}", // No PM Schedules have been generated for this coverage. This may be due to an issue with the Condition Rules. Please Review.
           } 
        };
        
        
        var SVMXJsr = {
            JsrGetPMPlanData: function(request, callback, context) {    
                var requestStr = SVMX.toJSON(request), me = this;
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.PREV_SetupPMPlan.getPMPlanData}', requestStr,
                    function(result, event){ me.processResult(result, event, callback, context); }, {escape: false}
                );
            },
            
            JsrGetPMTemplateDetails: function(request, callback, context) {    
                var requestStr = SVMX.toJSON(request), me = this;
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.PREV_SetupPMPlan.getPMTemplateDetails}', requestStr,
                    function(result, event){ me.processResult(result, event, callback, context); }, {escape: false}
                );
            },
            
            
            JsrSearchObject: function(request, callback, context) {    
                var requestStr = SVMX.toJSON(request), me = this;
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.PREV_SetupPMPlan.getsearchData}', requestStr,
                    function(result, event){ me.processResult(result, event, callback, context); }, {escape: false}
                );
            },
            
            JsrSavePMPlanData: function(request, callback, context) {    
                var requestStr = SVMX.toJSON(request), me = this;
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.PREV_SetupPMPlan.savePMPlanData}', requestStr,
                    function(result, event){ me.processResult(result, event, callback, context); }, {escape: false}
                );
            },
            
            JsrGetCoverageScheduleData: function(request, callback, context) {    
                var requestStr = SVMX.toJSON(request), me = this;
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.PREV_SetupPMPlan.createScheduleRec}', requestStr,
                    function(result, event){ me.processResult(result, event, callback, context); }, {escape: false}
                );
            },
            
            JsrGetCoverageTechnicalAtt: function(request, callback, context) {    
                var requestStr = SVMX.toJSON(request), me = this;
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.PREV_SetupPMPlan.getCovergaeTechnicalAtt}', requestStr,
                    function(result, event){ me.processResult(result, event, callback, context); }, {escape: false}
                );
            },
            
            JsrValidateExpression: function(request, callback, context) {    
                var requestStr = SVMX.toJSON(request), me = this;
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.PREV_SetupPMPlan.validateExp}', requestStr,
                    function(result, event){ me.processResult(result, event, callback, context); }, {escape: false}
                );
            },
            
            processResult : function(result, event, callback, context) {     
                var ret = {success : false};
                if(event.status == true) {
                    ret = SVMX.toObject(result);
                }
                callback.call(context, ret, event);
            },
        };  
          
    </script>
    
    <script type='text/javascript' src="{!URLFOR($Resource.com_servicemax_client_lib, 'com.servicemax.client.lib/src/bootstrap.js')}"/>
    
    <script type="text/javascript" src="{!URLFOR($Resource.com_servicemax_client_lib, 'com.servicemax.client.lib/src/dompurify/purify.js')}"></script>
    <script>
    jQuery(document).ready(function() {
    
        var client_runtime                = "{!URLFOR($Resource.com_servicemax_client_runtime, '')}";
        var client_mvc                    = "{!URLFOR($Resource.com_servicemax_client_mvc, '')}";
        var client_components             = "{!URLFOR($Resource.com_servicemax_client_ui_components, '')}";
        var client_sfmconsole             = "{!URLFOR($Resource.com_servicemax_client_sfmconsole, '')}";
        var ui_components_bubble          = "{!URLFOR($Resource.com_servicemax_client_ui_components_bubble, '')}";
        var client_themes                 = "{!URLFOR($Resource.com_servicemax_client_ui_themes, '')}";
        var client_themes2                = "{!URLFOR($Resource.com_servicemax_client_ui_themes2, '')}";
       
        var client_sal                    = processResourceURL("{!URLFOR($Resource.com_servicemax_client_sal, '')}");
        var client_sal_model              = processResourceURL("{!URLFOR($Resource.com_servicemax_client_sal_model, '')}");
        var client_sal_sfmconsole_model   = "{!URLFOR($Resource.com_servicemax_client_sal_sfmconsole_model, '')}";
        var sfmconsole_ui_web             = "{!URLFOR($Resource.com_servicemax_client_sfmconsole_ui_web, '')}";
        
        var ui_themes_orange              = "{!URLFOR($Resource.com_servicemax_client_ui_desktop_themes_orange, '')}";
        
        var client_pmplan                    = "{!URLFOR($Resource.com_servicemax_client_pmplan, '')}";
        var client_pmplan_model              = "{!URLFOR($Resource.com_servicemax_client_sal_pmplan_model, '')}";
        var client_pmplan_desktop            = "{!URLFOR($Resource.com_servicemax_client_pmplan_ui_desktop, '')}";  
        
        var config = {title:"PM Plan", version:"1.0.0",
            modules:[
                { id : "com.servicemax.client.runtime",                 version : "1.0.0",  codebase : client_runtime},
                { id : "com.servicemax.client.mvc",                     version : "1.0.0" , codebase : client_mvc },
                { id : "com.servicemax.client.ui.components",           version : "1.0.0" , codebase : client_components },
                { id : "com.servicemax.client.sfmconsole",              version : "1.0.0" , codebase : client_sfmconsole},
               
                { id : "com.servicemax.client.sal",                     version : "1.0.0" , codebase : client_sal },
             
                { id : "com.servicemax.client.sal.sfmconsole.model",    version : "1.0.0" , codebase : client_sal_sfmconsole_model},
                { id : "com.servicemax.client.ui.components.bubble",    version : "1.0.0" , codebase : ui_components_bubble },
                { id : "com.servicemax.client.ui.themes",               version : "1.0.0" , codebase : client_themes },
                { id : "com.servicemax.client.ui.themes2",              version : "1.0.0" , codebase : client_themes2 },
                { id : "com.servicemax.client.sfmconsole.ui.web",       version : "1.0.0" , codebase : sfmconsole_ui_web },
    
                { id : "com.servicemax.client.sal.pmplan.model",   version : "1.0.0" , codebase : client_pmplan_model },
                { id : "com.servicemax.client.pmplan",                  version : "1.0.0" , codebase : client_pmplan },
                { id : "com.servicemax.client.pmplan.ui.desktop",       version : "1.0.0" , codebase : client_pmplan_desktop },
                { id : "com.servicemax.client.ui.desktop.themes.orange",version : "1.0.0" , codebase : ui_themes_orange }
            ],
            
            "app-config" : {
                "application-id" : "console",
                "theme" : "ORANGE",
                "sal-service-runtime-mode" : "VISUAL_FORCE",
                "org-name-space": "SVMXC",
                "enable-cache"      : false,
                "enable-log"        : true,
                "svmx-sfm-sal-model-use-jsr" : true
            },
            
            "platform-config" : {}
        }
        
        var client = new com.servicemax.client.lib.core.Client();
    
        client.addApplicationParameter("session-id", "{!GETSESSIONID()}");
        client.addApplicationParameter("svmx-pmplan-userinfo", "{!JSENCODE(UserInfo)}");
        client.addApplicationParameter("pmplanid", "{!JSENCODE($CurrentPage.parameters.id)}");
        client.addApplicationParameter("sourceobj", "{!JSENCODE($CurrentPage.parameters.sourceobj)}");
        client.run({configType : "local", data : config, loadVersion : __SVMX_LOAD_VERSION__ });
        
        
    });
    </script>
    
    <body>
        <div id="client_display_root"></div>
    </body>

</apex:page>